#textdomain wesnoth-loti
#define INITIALISE_DAMAGES VARIABLE_NAME
    [set_variables]
        name={VARIABLE_NAME}
        mode=replace
        [value]
            damage=100
            attacks=100
            damage_plus=0
            attacks_plus=0
            weapon_damage_type=0
            other_damage_type=0
            name=0
            suck=0
            devastating_blow=0
        [/value]
    [/set_variables]
#enddef
#define INITIALISE_PENETRATIONS TYPE
    [set_variable]
        name={TYPE}_penetrate
        value=0
    [/set_variable]
#enddef
#define CHECK_PENETRATIONS_ADVANCE TYPE
    [if]
        [variable]
#ifver WESNOTH_VERSION >= 1.13.2
            name=advanced.modifications.advancement[$i].{TYPE}_penetrate
#else
            name=advanced.modifications.advance[$i].{TYPE}_penetrate
#endif
            not_equals=0
        [/variable]
        [then]
#ifver WESNOTH_VERSION >= 1.13.2
            {VARIABLE_OP {TYPE}_penetrate add $advanced.modifications.advancement[$i].{TYPE}_penetrate}
#else
            {VARIABLE_OP {TYPE}_penetrate add $advanced.modifications.advance[$i].{TYPE}_penetrate}
#endif
        [/then]
    [/if]
#enddef
#define CHECK_PENETRATIONS_GEAR TYPE
    [if]
        [variable]
            name=advanced.modifications.object[$i].{TYPE}_penetrate
            not_equals=0
        [/variable]
        [then]
            {VARIABLE_OP {TYPE}_penetrate add $advanced.modifications.object[$i].{TYPE}_penetrate}
        [/then]
    [/if]
#enddef
#define APPLY_PENETRATIONS TYPE
    [if]
        [variable]
            name={TYPE}_penetrate
            greater_than=0
        [/variable]
        [then]
            [set_variables]
                name=advanced.abilities.resistance[$advanced.abilities.resistance.length]
                mode=replace
                [value]
                    id={TYPE}_penetrate
                    sub=${TYPE}_penetrate
                    max_value=80
                    apply_to={TYPE}
                    affect_enemies=yes
                    affect_allies=no
                    affect_self=no
                    [affect_adjacent]
                        adjacent=n,ne,se,s,sw,nw
                    [/affect_adjacent]
                [/value]
            [/set_variables]
        [/then]
    [/if]
#enddef
#define APPLY_PENETRATIONS_GEAR TYPE
    [if]
        [variable]
            name={TYPE}_penetrate
            greater_than=0
        [/variable]
        [then]
            {VARIABLE_OP {TYPE}_penetrate add $advanced.modifications.object[$i].{TYPE}_penetrate}
        [/then]
    [/if]
#enddef
#define LIMIT_DEFENCE TERRAIN_NAME
    [if]
        [variable]
            name=advanced.defense.{TERRAIN_NAME}
            less_than=20
        [/variable]
        [and]
            [variable]
                name=advanced.defense.{TERRAIN_NAME}
                greater_than=0
            [/variable]
        [/and]
        [then]
            {VARIABLE advanced.defense.{TERRAIN_NAME} 20}
        [/then]
    [/if]
#enddef

#define CALCULATE_DEFENCE TERRAIN_NAME
    [if]
        [variable]
            name=advanced.defense.{TERRAIN_NAME}
            not_equals=""
        [/variable]
        [and]
            [variable]
                name=advanced.defense.{TERRAIN_NAME}
                not_equals=0
            [/variable]
        [/and]
        [then]
            {VARIABLE_OP advanced.defense.{TERRAIN_NAME} multiply "$(100-$block[$i].block)"}
            {VARIABLE_OP advanced.defense.{TERRAIN_NAME} divide 100}
        [/then]
    [/if]
#enddef

#define NOTIFY_RESIST TYPE
    [if]
        [variable]
            name=advanced.modifications.object[$i].{TYPE}_resist
            not_equals=0
        [/variable]
        [then]
            {VARIABLE_OP {TYPE}_resist add $advanced.modifications.object[$i].{TYPE}_resist}
        [/then]
    [/if]
#enddef

#define TEXT_COUNT VARIABLE_NAME FROM TO
    [if]
        [variable]
            name={VARIABLE_NAME}
            equals="{FROM}"
        [/variable]
        [then]
            {VARIABLE {VARIABLE_NAME} {TO}}
        [/then]
    [/if]
#enddef

#define BACKUP_UNIT_STATS
    [if]
        [variable]
            name=healed
            equals=1
        [/variable]
        [then]
            {VARIABLE advanced2.hitpoints $advanced2.max_hitpoints}
        [/then]
    [/if]
    [if]
        [variable]
            name=fully_healed
            equals=1
        [/variable]
        [then]
            {VARIABLE advanced2.hitpoints $advanced2.max_hitpoints}
            {VARIABLE advanced2.moves $advanced2.max_moves}
            {VARIABLE advanced2.attacks_left $advanced2.max_attacks}
            {CLEAR_VARIABLE advanced2.status.slowed}
            {CLEAR_VARIABLE advanced2.status.poisoned}
            {CLEAR_VARIABLE advanced.status}
        [/then]
    [/if]
    [if]		#Vritra purification
        [variable]
            name=healed
            equals=1
        [/variable]
        [or]
            [variable]
                name=fully_healed
                equals=1
            [/variable]
        [/or]
        [then]
            {VARIABLE advanced2.variables.healed_this_turn yes}
            [if]
                [variable]
                    name=advanced2.type
                    equals=Vritra
                [/variable]
                [then]
                    [if]
                        [variable]
                            name=advanced2.variation
                            equals=corruption1
                        [/variable]
                        [then]
                            {CLEAR_VARIABLE advanced2.variation}
                        [/then]
                    [/if]
                    [if]
                        [variable]
                            name=advanced2.variation
                            equals=corruption2
                        [/variable]
                        [then]
                            {VARIABLE advanced2.variation corruption1}
                        [/then]
                    [/if]
                    [if]
                        [variable]
                            name=advanced2.variation
                            equals=corruption3
                        [/variable]
                        [then]
                            {VARIABLE advanced2.variation corruption2}
                        [/then]
                    [/if]
                    [if]
                        [variable]
                            name=advanced2.variation
                            equals=corruption4
                        [/variable]
                        [and]
                            [variable]
                                name=advanced2.variables.corruption_level
                                less_than=10
                            [/variable]
                        [/and]
                        [then]
                            {VARIABLE advanced2.variation corruption3}
                        [/then]
                    [/if]
                    {VARIABLE advanced2.variables.corruption_level 0}
                [/then]
            [/if]
        [/then]
    [/if]
    {CLEAR_VARIABLE healed}
    {CLEAR_VARIABLE fully_healed}
    {FOREACH advanced2.modifications.object i}
        {FOREACH advanced2.modifications.object[$i].effect j}
            [if]
                [variable]
                    name=advanced2.modifications.object[$i].effect[$j].number_required
                    greater_than_equal_to=1
                [/variable]
                [then]
                    {CLEAR_VARIABLE advanced2.modifications.object[$i].effect[$j]}
                    {VARIABLE_OP j sub 1}
                [/then]
            [/if]
        {NEXT j}
    {NEXT i}
    {VARIABLE geared 0}
    {FOREACH advanced2.modifications.object i}
        [if]
            [variable]
                name=advanced2.modifications.object[$i].latent.length
                greater_than=0
            [/variable]
            [then]
                {FOREACH item_list.object j}
                    [if]
                        [variable]
                            name=advanced2.modifications.object[$i].number
                            equals=$item_list.object[$j].number
                        [/variable]
                        [then]
                            {FOREACH item_list.object[$j].latent k}
                                {VARIABLE advanced2.modifications.object[$i].latent[$k].desc $item_list.object[$j].latent[$k].desc}
                            {NEXT k}
                        [/then]
                    [/if]
                {NEXT j}
            [/then]
        [/if]
        {FOREACH advanced2.modifications.object[$i].latent j}
            {FOREACH advanced2.modifications.object k}
                [if]
                    [variable]
                        name=advanced2.modifications.object[$i].latent[$j].number_required
                        equals=$advanced2.modifications.object[$k].number
                    [/variable]
                    [then]
                        [set_variables]
                            name=advanced2.modifications.object[$i].effect[$advanced2.modifications.object[$i].effect.length]
                            mode=replace
                            to_variable=advanced2.modifications.object[$i].latent[$j]
                        [/set_variables]
                        [set_variable]
                            name=bold_description
                            value="<b>$advanced2.modifications.object[$i].latent[$j].desc|</b>"
                        [/set_variable]
                        [set_variable]
                            name=advanced2.modifications.object[$i].latent[$j].desc
                            to_variable=bold_description
                        [/set_variable]
                        {CLEAR_VARIABLE bold_description}
                    [/then]
                [/if]
            {NEXT k}
        {NEXT j}
        [if]
            [variable]
                name=advanced2.modifications.object[$i].latent.length
                greater_than=0
            [/variable]
            [then]
                [set_variables]
                    name=description
                    mode=replace
                    [split]
                        list=$advanced2.modifications.object[$i].description
                        key=line
                        separator="
"
                        remove_empty=yes
                    [/split]
                [/set_variables]
                {FOREACH description k}
                    [if]
                        [variable]
                            name=description[$k].line
                            contains="<span color='purple'>"
                        [/variable]
                        [then]
                            {CLEAR_VARIABLE description[$k]}
                            {VARIABLE_OP k sub 1}
                        [/then]
                    [/if]
                {NEXT k}
                {FOREACH advanced2.modifications.object[$i].latent k}
                    [if]
                        [variable]
                            name=advanced2.modifications.object[$i].latent[$k].desc
                            not_equals=""
                        [/variable]
                        [then]
                            {VARIABLE description[$description.length].line $advanced2.modifications.object[$i].latent[$k].desc}
                        [/then]
                    [/if]
                {NEXT k}
                [set_variable]
                    name=advanced2.modifications.object[$i].description
                    [join]
                        variable=description
                        key=line
                        separator="
"
                        remove_empty=yes
                    [/join]
                [/set_variable]
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced2.modifications.object[$i].sort
                equals=armour
            [/variable]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=helm
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=boots
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=gauntlets
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=limited
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=amulet
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=ring
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=cloak
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=sword
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=bow
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=axe
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=xbow
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=dagger
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=knife
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=spear
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=mace
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=polearm
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=sling
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=exotic
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=thunderstick
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=claws
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=essence
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced2.modifications.object[$i].sort
                    equals=staff
                [/variable]
            [/or]
            [then]
                {VARIABLE geared 1}
            [/then]
        [/if]
    {NEXT i}
    {FOREACH advanced2.modifications.trait i}
        [if]
            [variable]
                name=advanced2.modifications.trait[$i].id
                equals=geared
            [/variable]
            [then]
                {CLEAR_VARIABLE advanced2.modifications.trait[$i]}
                {VARIABLE_OP i sub 1}
            [/then]
        [/if]
    {NEXT i}
    [if]
        [variable]
            name=geared
            equals=1
        [/variable]
        [then]
            {VARIABLE advanced2.modifications.trait[$advanced2.modifications.trait.length].name _"GEARED"}
            {VARIABLE "advanced2.modifications.trait[$($advanced2.modifications.trait.length-1)].id" "geared"}
            {VARIABLE "advanced2.modifications.trait[$($advanced2.modifications.trait.length-1)].description" _"Geared: This unit is equipped with items. This is just to easily identify it on the recall list."}
            {VARIABLE advanced2.variables.geared yes}
        [/then]
    [/if]
    {CLEAR_VARIABLE geared}

    [unit]	#Doesn't flash white like the previous way to do it
        side=$advanced2.side
        x=$advanced2.x
        y=$advanced2.y
        experience=$advanced2.experience
        canrecruit=$advanced2.canrecruit
        variation=$advanced2.variation
        type=$advanced2.type
        id=$advanced2.id
        moves=$advanced2.moves
        hitpoints=$advanced2.hitpoints
        gender=$advanced2.gender
        name=$advanced2.name
        facing=$advanced2.facing
        extra_recruit=$advanced2.extra_recruit
        underlying_id=$advanced2.underlying_id
        unrenamable=$advanced2.unrenamable
        overlays=$advanced2.overlays
        animate=no
        [insert_tag]
            name=status
            variable=advanced2.status
        [/insert_tag]
        [insert_tag]
            name=modifications
            variable=advanced2.modifications
        [/insert_tag]
        [insert_tag]
            name=variables
            variable=advanced2.variables
        [/insert_tag]
        to_variable=advanced
    [/unit]
    {VARIABLE advanced.moves $advanced2.moves}
    {VARIABLE advanced.attacks_left $advanced2.attacks_left}

    {INITIALISE_PENETRATIONS fire}
    {INITIALISE_PENETRATIONS cold}
    {INITIALISE_PENETRATIONS arcane}
    {INITIALISE_PENETRATIONS blade}
    {INITIALISE_PENETRATIONS pierce}
    {INITIALISE_PENETRATIONS impact}
    {VARIABLE has_legacy 0}
    {FOREACH advanced.attack i}
        [if]
            [variable]
                name=advanced.attack[$i].temporary
                equals=yes
            [/variable]
            [then]
                {CLEAR_VARIABLE advanced.attack[$i]}
                {VARIABLE_OP i sub 1}
            [/then]
        [/if]
    {NEXT i}
#ifver WESNOTH_VERSION >= 1.13.2
    {FOREACH advanced.modifications.advancement i}	#Make advancements change weapons' icon if it's written so and also some other stuff
#else
    {FOREACH advanced.modifications.advance i}	#Make advancements change weapons' icon if it's written so and also some other stuff
#endif
        {CHECK_PENETRATIONS_ADVANCE fire}
        {CHECK_PENETRATIONS_ADVANCE cold}
        {CHECK_PENETRATIONS_ADVANCE arcane}
        {CHECK_PENETRATIONS_ADVANCE blade}
        {CHECK_PENETRATIONS_ADVANCE pierce}
        {CHECK_PENETRATIONS_ADVANCE impact}
        [if]
            [variable]
#ifver WESNOTH_VERSION >= 1.13.2
                name=advanced.modifications.advancement[$i].id
#else
                name=advanced.modifications.advance[$i].id
#endif
                contains="legacy"
            [/variable]
            [then]
                {VARIABLE_OP has_legacy add 1}
            [/then]
        [/if]
        [if]
            [variable]
#ifver WESNOTH_VERSION >= 1.13.2
                name=advanced.modifications.advancement[$i].effect[$j].apply_to
#else
                name=advanced.modifications.advance[$i].effect[$j].apply_to
#endif
                equals="alignment"
            [/variable]
            [then]
#ifver WESNOTH_VERSION >= 1.13.2
                {VARIABLE advanced.alignment $advanced.modifications.advancement[$i].effect[$j].alignment}
#else
                {VARIABLE advanced.alignment $advanced.modifications.advance[$i].effect[$j].alignment}
#endif
            [/then]
        [/if]
#ifver WESNOTH_VERSION >= 1.13.2
        {FOREACH advanced.modifications.advancement[$i].effect j}
#else
        {FOREACH advanced.modifications.advance[$i].effect j}
#endif
            [if]
                [variable]
#ifver WESNOTH_VERSION >= 1.13.2
                    name=advanced.modifications.advancement[$i].effect[$j].set_icon
#else
                    name=advanced.modifications.advance[$i].effect[$j].set_icon
#endif
                    contains="png"
                [/variable]
                [then]
#ifver WESNOTH_VERSION >= 1.13.2
                    {VARIABLE attack_name $advanced.modifications.advancement[$i].effect[$j].name}
#else
                    {VARIABLE attack_name $advanced.modifications.advance[$i].effect[$j].name}
#endif
                    {FOREACH advanced.attack k}
                        [if]
                            [variable]
                                name=advanced.attack[$k].name
                                equals=$attack_name
                            [/variable]
                            [then]
#ifver WESNOTH_VERSION >= 1.13.2
                                {VARIABLE advanced.attack[$k].icon $advanced.modifications.advancement[$i].effect[$j].set_icon}
#else
                                {VARIABLE advanced.attack[$k].icon $advanced.modifications.advance[$i].effect[$j].set_icon}
#endif
                            [/then]
                        [/if]
                    {NEXT k}
                [/then]
            [/if]
        {NEXT j}
    {NEXT i}
#enddef

#define UPDATE_STATS
    [store_unit]
        [filter]
            x,y=$x1,$y1
        [/filter]
        variable=advanced2
        kill=yes
    [/store_unit]
    [fire_event]
        name=update_stats
        [primary_unit]
            id=$advanced2.id
        [/primary_unit]
    [/fire_event]
#enddef

#define CALCULATE_WEAPONS_ONLY
    {INITIALISE_DAMAGES attack_sword}
    {INITIALISE_DAMAGES attack_axe}
    {INITIALISE_DAMAGES attack_bow}
    {INITIALISE_DAMAGES attack_xbow}
    {INITIALISE_DAMAGES attack_mace}
    {INITIALISE_DAMAGES attack_spear}
    {INITIALISE_DAMAGES attack_knife}
    {INITIALISE_DAMAGES attack_dagger}
    {INITIALISE_DAMAGES attack_staff}
    {INITIALISE_DAMAGES attack_other}
    {INITIALISE_DAMAGES attack_polearm}
    {INITIALISE_DAMAGES attack_exotic}
    {INITIALISE_DAMAGES attack_sling}
    {INITIALISE_DAMAGES attack_thunderstick}
    {INITIALISE_DAMAGES attack_claws}
    {INITIALISE_DAMAGES attack_essence}
    {VARIABLE fire_resist 0}
    {VARIABLE cold_resist 0}
    {VARIABLE arcane_resist 0}
    {VARIABLE blade_resist 0}
    {VARIABLE pierce_resist 0}
    {VARIABLE impact_resist 0}
    {VARIABLE vision 0}
    {VARIABLE magic 100}
    {VARIABLE spell_suck 0}
    #	[if]		# Make the armours raise resistance
    #		[variable]
    #			name=advanced.defense.forest
    #			equals="-70"
    #		[/variable]
    #		[then]
    #			{VARIABLE advanced.defense.forest 70}
    #		[/then]
    #	[/if]

    {FOREACH advanced.modifications.object i}
        [if]		# Make the armours raise resistance
            [variable]
                name=advanced.modifications.object[$i].defence
                not_equals=""
            [/variable]
            [then]
                {VARIABLE defence[$defence.length].defence $advanced.modifications.object[$i].defence}
            [/then]
        [/if]
        [if]		# Make things increase raise defence
            [variable]
                name=advanced.modifications.object[$i].dodge
                not_equals=""
            [/variable]
            [then]
                {VARIABLE block[$block.length].block $advanced.modifications.object[$i].dodge}
            [/then]
        [/if]
        [if]		# Make things increase magic damage
            [variable]
                name=advanced.modifications.object[$i].magic
                not_equals=""
            [/variable]
            [then]
                {VARIABLE_OP magic add $advanced.modifications.object[$i].magic}
            [/then]
        [/if]
        [if]		# Make things increase spells' suck
            [variable]
                name=advanced.modifications.object[$i].spell_suck
                not_equals=""
            [/variable]
            [then]
                {VARIABLE_OP spell_suck add $advanced.modifications.object[$i].spell_suck}
            [/then]
        [/if]
        [if]		# Make things increase vision distance (1.11 only)
            [variable]
                name=advanced.modifications.object[$i].vision
                not_equals=""
            [/variable]
            [then]
                {VARIABLE_OP vision add $advanced.modifications.object[$i].vision}
            [/then]
        [/if]
        #Increase resistances
        {NOTIFY_RESIST fire}
        {NOTIFY_RESIST cold}
        {NOTIFY_RESIST arcane}
        {NOTIFY_RESIST blade}
        {NOTIFY_RESIST pierce}
        {NOTIFY_RESIST impact}

        # Make things raise damage in a more specific way (not depending on the order in which they were equipped)
        {VARIABLE weapons "sword,axe,bow,xbow,mace,knife,dagger,staff,spear,polearm,other,exotic,sling,thunderstick,claws,essence"}
        [if]
            [variable]
                name=weapons
                contains=$advanced.modifications.object[$i].sort
            [/variable]
            [then]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].damage
                        not_equals=0
                    [/variable]
                    [then]
                        {VARIABLE_OP attack_$advanced.modifications.object[$i].sort|.damage add $advanced.modifications.object[$i].damage}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].suck
                        greater_than=0
                    [/variable]
                    [then]
                        {VARIABLE_OP attack_$advanced.modifications.object[$i].sort|.suck add $advanced.modifications.object[$i].suck}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].devastating_blow
                        greater_than=0
                    [/variable]
                    [then]
                        {VARIABLE_OP attack_$advanced.modifications.object[$i].sort|.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].damage_plus
                        not_equals=0
                    [/variable]
                    [then]
                        {VARIABLE_OP attack_$advanced.modifications.object[$i].sort|.damage_plus add $advanced.modifications.object[$i].damage_plus}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].attacks
                        not_equals=0
                    [/variable]
                    [then]
                        {VARIABLE_OP attack_$advanced.modifications.object[$i].sort|.attacks add $advanced.modifications.object[$i].attacks}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].icon
                        contains="png"
                    [/variable]
                    [then]
                        {VARIABLE attack_$advanced.modifications.object[$i].sort|.icon  $advanced.modifications.object[$i].icon}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].merge
                        equals=yes
                    [/variable]
                    [then]
                        {VARIABLE attack_$advanced.modifications.object[$i].sort|.merge yes}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].damage_type
                        not_equals=""
                    [/variable]
                    [then]
                        {VARIABLE attack_$advanced.modifications.object[$i].sort|.weapon_damage_type $advanced.modifications.object[$i].damage_type}
                    [/then]
                [/if]

                {VARIABLE attack_$advanced.modifications.object[$i].sort|.name $advanced.modifications.object[$i].name}

                {VARIABLE count nothing_yet}
                [while]
                    [variable]
                        name=count
                        not_equals="poison"
                    [/variable]
                    [do]
                        {TEXT_COUNT count firststrike poison}
                        {TEXT_COUNT count attacks firststrike}
                        {TEXT_COUNT count slow attacks}
                        {TEXT_COUNT count plague slow}
                        {TEXT_COUNT count chance_to_hit plague}
                        {TEXT_COUNT count berserk chance_to_hit}
                        {TEXT_COUNT count damage berserk}
                        {TEXT_COUNT count dummy damage}
                        {TEXT_COUNT count drains dummy}
                        {TEXT_COUNT count swarm drains}
                        {TEXT_COUNT count nothing_yet swarm}
                        {VARIABLE variable_in_foreach "advanced.modifications.object[$i].specials.$count|.length"}
                        [set_variable]
                            name="foreach"
                            to_variable="$variable_in_foreach"
                        [/set_variable]
                        [while]
                            [variable]
                                name="j"
                                less_than="$foreach"
                            [/variable]
                            [do]
                                [set_variable]
                                    name="index"
                                    to_variable="attack_$advanced.modifications.object[$i].sort|.specials.$count|.length"
                                [/set_variable]
                                {VARIABLE variable_name "attack_$advanced.modifications.object[$i].sort|.specials.$count|[$index]"}
                                {VARIABLE variable_to_variable "advanced.modifications.object[$i].specials.$count|[$j]"}
                                [set_variables]
                                    name=$variable_name
                                    mode=replace
                                    to_variable=$variable_to_variable
                                [/set_variables]
                                {VARIABLE_OP j add 1}
                            [/do]
                        [/while]
                        {CLEAR_VARIABLE j}
                    [/do]
                [/while]
            [/then]
        [/if]
        {CLEAR_VARIABLE weapons}

        {CHECK_PENETRATIONS_GEAR fire}
        {CHECK_PENETRATIONS_GEAR cold}
        {CHECK_PENETRATIONS_GEAR arcane}
        {CHECK_PENETRATIONS_GEAR blade}
        {CHECK_PENETRATIONS_GEAR pierce}
        {CHECK_PENETRATIONS_GEAR impact}
        [if]
            [variable]
                name=advanced.modifications.object[$i].sort
                equals=amulet
            [/variable]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=ring
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=armour
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=cloak
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=helm
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=boots
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=gauntlets
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=limited
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=potion
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=unlimited
                [/variable]
            [/or]
            [then]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].damage
                        not_equals=0
                    [/variable]
                    [then]
                        {VARIABLE_OP attack_sword.damage add $advanced.modifications.object[$i].damage}
                        {VARIABLE_OP attack_axe.damage add $advanced.modifications.object[$i].damage}
                        {VARIABLE_OP attack_bow.damage add $advanced.modifications.object[$i].damage}
                        {VARIABLE_OP attack_xbow.damage add $advanced.modifications.object[$i].damage}
                        {VARIABLE_OP attack_dagger.damage add $advanced.modifications.object[$i].damage}
                        {VARIABLE_OP attack_knife.damage add $advanced.modifications.object[$i].damage}
                        {VARIABLE_OP attack_spear.damage add $advanced.modifications.object[$i].damage}
                        {VARIABLE_OP attack_mace.damage add $advanced.modifications.object[$i].damage}
                        {VARIABLE_OP attack_staff.damage add $advanced.modifications.object[$i].damage}
                        {VARIABLE_OP attack_polearm.damage add $advanced.modifications.object[$i].damage}
                        {VARIABLE_OP attack_other.damage add $advanced.modifications.object[$i].damage}
                        {VARIABLE_OP attack_exotic.damage add $advanced.modifications.object[$i].damage}
                        {VARIABLE_OP attack_sling.damage add $advanced.modifications.object[$i].damage}
                        {VARIABLE_OP attack_thunderstick.damage add $advanced.modifications.object[$i].damage}
                        {VARIABLE_OP attack_claws.damage add $advanced.modifications.object[$i].damage}
                        {VARIABLE_OP attack_essence.damage add $advanced.modifications.object[$i].damage}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].damage_plus
                        not_equals=0
                    [/variable]
                    [then]
                        {VARIABLE_OP attack_sword.damage_plus add $advanced.modifications.object[$i].damage_plus}
                        {VARIABLE_OP attack_axe.damage_plus add $advanced.modifications.object[$i].damage_plus}
                        {VARIABLE_OP attack_bow.damage_plus add $advanced.modifications.object[$i].damage_plus}
                        {VARIABLE_OP attack_xbow.damage_plus add $advanced.modifications.object[$i].damage_plus}
                        {VARIABLE_OP attack_dagger.damage_plus add $advanced.modifications.object[$i].damage_plus}
                        {VARIABLE_OP attack_knife.damage_plus add $advanced.modifications.object[$i].damage_plus}
                        {VARIABLE_OP attack_spear.damage_plus add $advanced.modifications.object[$i].damage_plus}
                        {VARIABLE_OP attack_mace.damage_plus add $advanced.modifications.object[$i].damage_plus}
                        {VARIABLE_OP attack_staff.damage_plus add $advanced.modifications.object[$i].damage_plus}
                        {VARIABLE_OP attack_sling.damage_plus add $advanced.modifications.object[$i].damage_plus}
                        {VARIABLE_OP attack_thunderstick.damage_plus add $advanced.modifications.object[$i].damage_plus}
                        {VARIABLE_OP attack_exotic.damage_plus add $advanced.modifications.object[$i].damage_plus}
                        {VARIABLE_OP attack_other.damage_plus add $advanced.modifications.object[$i].damage_plus}
                        {VARIABLE_OP attack_polearm.damage_plus add $advanced.modifications.object[$i].damage_plus}
                        {VARIABLE_OP attack_claws.damage_plus add $advanced.modifications.object[$i].damage_plus}
                        {VARIABLE_OP attack_essence.damage_plus add $advanced.modifications.object[$i].damage_plus}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].damage_melee
                        not_equals=0
                    [/variable]
                    [then]
                        {VARIABLE_OP attack_sword.damage add $advanced.modifications.object[$i].damage_melee}
                        {VARIABLE_OP attack_axe.damage add $advanced.modifications.object[$i].damage_melee}
                        {VARIABLE_OP attack_dagger.damage add $advanced.modifications.object[$i].damage_melee}
                        {VARIABLE_OP attack_spear.damage add $advanced.modifications.object[$i].damage_melee}
                        {VARIABLE_OP attack_mace.damage add $advanced.modifications.object[$i].damage_melee}
                        {VARIABLE_OP attack_staff.damage add $advanced.modifications.object[$i].damage_melee}
                        {VARIABLE_OP attack_other.damage add $advanced.modifications.object[$i].damage_melee}
                        {VARIABLE_OP attack_exotic.damage add $advanced.modifications.object[$i].damage_melee}
                        {VARIABLE_OP attack_polearm.damage add $advanced.modifications.object[$i].damage_melee}
                        {VARIABLE_OP attack_claws.damage add $advanced.modifications.object[$i].damage_melee}
                        {VARIABLE_OP attack_essence.damage add $advanced.modifications.object[$i].damage_melee}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].damage_melee_plus
                        not_equals=0
                    [/variable]
                    [then]
                        {VARIABLE_OP attack_sword.damage_plus add $advanced.modifications.object[$i].damage_melee_plus}
                        {VARIABLE_OP attack_axe.damage_plus add $advanced.modifications.object[$i].damage_melee_plus}
                        {VARIABLE_OP attack_dagger.damage_plus add $advanced.modifications.object[$i].damage_melee_plus}
                        {VARIABLE_OP attack_spear.damage_plus add $advanced.modifications.object[$i].damage_melee_plus}
                        {VARIABLE_OP attack_mace.damage_plus add $advanced.modifications.object[$i].damage_melee_plus}
                        {VARIABLE_OP attack_staff.damage_plus add $advanced.modifications.object[$i].damage_melee_plus}
                        {VARIABLE_OP attack_exotic.damage_plus add $advanced.modifications.object[$i].damage_melee_plus}
                        {VARIABLE_OP attack_polearm.damage_plus add $advanced.modifications.object[$i].damage_melee_plus}
                        {VARIABLE_OP attack_claws.damage_plus add $advanced.modifications.object[$i].damage_melee_plus}
                        {VARIABLE_OP attack_essence.damage_plus add $advanced.modifications.object[$i].damage_melee_plus}
                        {VARIABLE_OP attack_other.damage_plus add $advanced.modifications.object[$i].damage_melee_plus}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].damage_ranged
                        not_equals=0
                    [/variable]
                    [then]
                        {VARIABLE_OP attack_bow.damage add $advanced.modifications.object[$i].damage_ranged}
                        {VARIABLE_OP attack_xbow.damage add $advanced.modifications.object[$i].damage_ranged}
                        {VARIABLE_OP attack_knife.damage add $advanced.modifications.object[$i].damage_ranged}
                        {VARIABLE_OP attack_sling.damage add $advanced.modifications.object[$i].damage_ranged}
                        {VARIABLE_OP attack_thunderstick.damage add $advanced.modifications.object[$i].damage_ranged}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].damage_ranged_plus
                        not_equals=0
                    [/variable]
                    [then]
                        {VARIABLE_OP attack_bow.damage_plus add $advanced.modifications.object[$i].damage_ranged_plus}
                        {VARIABLE_OP attack_xbow.damage_plus add $advanced.modifications.object[$i].damage_ranged_plus}
                        {VARIABLE_OP attack_knife.damage_plus add $advanced.modifications.object[$i].damage_ranged_plus}
                        {VARIABLE_OP attack_sling.damage_plus add $advanced.modifications.object[$i].damage_ranged_plus}
                        {VARIABLE_OP attack_thunderstick.damage_plus add $advanced.modifications.object[$i].damage_ranged_plus}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].attacks
                        not_equals=0
                    [/variable]
                    [then]
                        {VARIABLE_OP attack_sword.attacks_plus add $advanced.modifications.object[$i].attacks}
                        {VARIABLE_OP attack_axe.attacks_plus add $advanced.modifications.object[$i].attacks}
                        {VARIABLE_OP attack_bow.attacks_plus add $advanced.modifications.object[$i].attacks}
                        {VARIABLE_OP attack_xbow.attacks_plus add $advanced.modifications.object[$i].attacks}
                        {VARIABLE_OP attack_dagger.attacks_plus add $advanced.modifications.object[$i].attacks}
                        {VARIABLE_OP attack_knife.attacks_plus add $advanced.modifications.object[$i].attacks}
                        {VARIABLE_OP attack_spear.attacks_plus add $advanced.modifications.object[$i].attacks}
                        {VARIABLE_OP attack_mace.attacks_plus add $advanced.modifications.object[$i].attacks}
                        {VARIABLE_OP attack_staff.attacks_plus add $advanced.modifications.object[$i].attacks}
                        {VARIABLE_OP attack_other.attacks_plus add $advanced.modifications.object[$i].attacks}
                        {VARIABLE_OP attack_polearm.attacks_plus add $advanced.modifications.object[$i].attacks}
                        {VARIABLE_OP attack_claws.attacks_plus add $advanced.modifications.object[$i].attacks}
                        {VARIABLE_OP attack_exotic.attacks_plus add $advanced.modifications.object[$i].attacks}
                        {VARIABLE_OP attack_sling.attacks_plus add $advanced.modifications.object[$i].attacks}
                        {VARIABLE_OP attack_essence.attacks_plus add $advanced.modifications.object[$i].attacks}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].damage_type
                        not_equals=""
                    [/variable]
                    [then]
                        {VARIABLE attack_sword.other_damage_type $advanced.modifications.object[$i].damage_type}
                        {VARIABLE attack_axe.other_damage_type $advanced.modifications.object[$i].damage_type}
                        {VARIABLE attack_bow.other_damage_type $advanced.modifications.object[$i].damage_type}
                        {VARIABLE attack_xbow.other_damage_type $advanced.modifications.object[$i].damage_type}
                        {VARIABLE attack_dagger.other_damage_type $advanced.modifications.object[$i].damage_type}
                        {VARIABLE attack_knife.other_damage_type $advanced.modifications.object[$i].damage_type}
                        {VARIABLE attack_spear.other_damage_type $advanced.modifications.object[$i].damage_type}
                        {VARIABLE attack_mace.other_damage_type $advanced.modifications.object[$i].damage_type}
                        {VARIABLE attack_staff.other_damage_type $advanced.modifications.object[$i].damage_type}
                        {VARIABLE attack_sling.other_damage_type $advanced.modifications.object[$i].damage_type}
                        {VARIABLE attack_thunderstick.other_damage_type $advanced.modifications.object[$i].damage_type}
                        {VARIABLE attack_exotic.other_damage_type $advanced.modifications.object[$i].damage_type}
                        {VARIABLE attack_other.other_damage_type $advanced.modifications.object[$i].damage_type}
                        {VARIABLE attack_polearm.other_damage_type $advanced.modifications.object[$i].damage_type}
                        {VARIABLE attack_claws.other_damage_type $advanced.modifications.object[$i].damage_type}
                        {VARIABLE attack_essence.other_damage_type $advanced.modifications.object[$i].damage_type}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].suck
                        not_equals=0
                    [/variable]
                    [then]
                        {VARIABLE_OP attack_sword.suck add $advanced.modifications.object[$i].suck}
                        {VARIABLE_OP attack_axe.suck add $advanced.modifications.object[$i].suck}
                        {VARIABLE_OP attack_bow.suck add $advanced.modifications.object[$i].suck}
                        {VARIABLE_OP attack_xbow.suck add $advanced.modifications.object[$i].suck}
                        {VARIABLE_OP attack_dagger.suck add $advanced.modifications.object[$i].suck}
                        {VARIABLE_OP attack_knife.suck add $advanced.modifications.object[$i].suck}
                        {VARIABLE_OP attack_spear.suck add $advanced.modifications.object[$i].suck}
                        {VARIABLE_OP attack_mace.suck add $advanced.modifications.object[$i].suck}
                        {VARIABLE_OP attack_staff.suck add $advanced.modifications.object[$i].suck}
                        {VARIABLE_OP attack_sling.suck add $advanced.modifications.object[$i].suck}
                        {VARIABLE_OP attack_thunderstick.suck add $advanced.modifications.object[$i].suck}
                        {VARIABLE_OP attack_exotic.suck add $advanced.modifications.object[$i].suck}
                        {VARIABLE_OP attack_other.suck add $advanced.modifications.object[$i].suck}
                        {VARIABLE_OP attack_polearm.suck add $advanced.modifications.object[$i].suck}
                        {VARIABLE_OP attack_claws.suck add $advanced.modifications.object[$i].suck}
                        {VARIABLE_OP attack_essence.suck add $advanced.modifications.object[$i].suck}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=advanced.modifications.object[$i].devastating_blow
                        not_equals=0
                    [/variable]
                    [then]
                        {VARIABLE_OP attack_sword.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                        {VARIABLE_OP attack_axe.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                        {VARIABLE_OP attack_bow.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                        {VARIABLE_OP attack_xbow.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                        {VARIABLE_OP attack_dagger.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                        {VARIABLE_OP attack_knife.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                        {VARIABLE_OP attack_spear.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                        {VARIABLE_OP attack_mace.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                        {VARIABLE_OP attack_staff.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                        {VARIABLE_OP attack_sling.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                        {VARIABLE_OP attack_thunderstick.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                        {VARIABLE_OP attack_exotic.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                        {VARIABLE_OP attack_other.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                        {VARIABLE_OP attack_polearm.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                        {VARIABLE_OP attack_claws.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                        {VARIABLE_OP attack_essence.devastating_blow add $advanced.modifications.object[$i].devastating_blow}
                    [/then]
                [/if]
                {VARIABLE count nothing_yet}

                [while]
                    [variable]
                        name=count
                        not_equals="poison"
                    [/variable]
                    [do]
                        {TEXT_COUNT count firststrike poison}
                        {TEXT_COUNT count attacks firststrike}
                        {TEXT_COUNT count swarm attacks}
                        {TEXT_COUNT count plague swarm}
                        {TEXT_COUNT count chance_to_hit plague}
                        {TEXT_COUNT count berserk chance_to_hit}
                        {TEXT_COUNT count damage berserk}
                        {TEXT_COUNT count dummy damage}
                        {TEXT_COUNT count drains dummy}
                        {TEXT_COUNT count slow drains}
                        {TEXT_COUNT count nothing_yet slow}
                        {VARIABLE variable_in_foreach "advanced.modifications.object[$i].specials.$count|.length"}
                        [set_variable]
                            name="foreach"
                            to_variable="$variable_in_foreach"
                        [/set_variable]
                        [while]
                            [variable]
                                name="j"
                                less_than="$foreach"
                            [/variable]
                            [do]
                                {VARIABLE count2 nothing_yet}
                                [while]
                                    [variable]
                                        name=count2
                                        not_equals="axe"
                                    [/variable]
                                    [do]
                                        {TEXT_COUNT count2 sword axe}
                                        {TEXT_COUNT count2 bow sword}
                                        {TEXT_COUNT count2 exotic bow}
                                        {TEXT_COUNT count2 claws exotic}
                                        {TEXT_COUNT count2 essence claws}
                                        {TEXT_COUNT count2 polearm essence}
                                        {TEXT_COUNT count2 other polearm}
                                        {TEXT_COUNT count2 thunderstick other}
                                        {TEXT_COUNT count2 sling thunderstick}
                                        {TEXT_COUNT count2 xbow sling}
                                        {TEXT_COUNT count2 dagger xbow}
                                        {TEXT_COUNT count2 knife dagger}
                                        {TEXT_COUNT count2 staff knife}
                                        {TEXT_COUNT count2 mace staff}
                                        {TEXT_COUNT count2 spear mace}
                                        {TEXT_COUNT count2 nothing_yet spear}
                                        {VARIABLE variable_in_foreach "advanced.modifications.object[$i].specials.$count|.length"}
                                        [set_variable]
                                            name="foreach"
                                            to_variable="$variable_in_foreach"
                                        [/set_variable]
                                        [while]
                                            [variable]
                                                name="k"
                                                less_than="$foreach"
                                            [/variable]
                                            [do]
                                                [set_variable]
                                                    name="index"
                                                    to_variable="attack_$count2|.specials.$count|.length"
                                                [/set_variable]
                                                {VARIABLE variable_name "attack_$count2|.specials.$count|[$index]"}
                                                {VARIABLE variable_to_variable "advanced.modifications.object[$i].specials.$count|[$k]"}
                                                [set_variables]
                                                    name=$variable_name
                                                    mode=replace
                                                    to_variable=$variable_to_variable
                                                [/set_variables]
                                                {VARIABLE_OP k add 1}
                                            [/do]
                                        [/while]
                                        {CLEAR_VARIABLE k}
                                    [/do]
                                [/while]
                                {VARIABLE_OP j add 1}
                            [/do]
                        [/while]
                        {CLEAR_VARIABLE j}
                        {VARIABLE variable_in_foreach "advanced.modifications.object[$i].specials_melee.$count|.length"}
                        [set_variable]
                            name="foreach"
                            to_variable="$variable_in_foreach"
                        [/set_variable]
                        [while]
                            [variable]
                                name="j"
                                less_than="$foreach"
                            [/variable]
                            [do]
                                {VARIABLE count2 nothing_yet}
                                [while]
                                    [variable]
                                        name=count2
                                        not_equals="axe"
                                    [/variable]
                                    [do]
                                        {TEXT_COUNT count2 sword axe}
                                        {TEXT_COUNT count2 dagger sword}
                                        {TEXT_COUNT count2 exotic dagger}
                                        {TEXT_COUNT count2 essence exotic}
                                        {TEXT_COUNT count2 claws essence}
                                        {TEXT_COUNT count2 polearm claws}
                                        {TEXT_COUNT count2 other polearm}
                                        {TEXT_COUNT count2 staff other}
                                        {TEXT_COUNT count2 mace staff}
                                        {TEXT_COUNT count2 spear mace}
                                        {TEXT_COUNT count2 nothing_yet spear}
                                        {VARIABLE variable_in_foreach "advanced.modifications.object[$i].specials_melee.$count|.length"}
                                        [set_variable]
                                            name="foreach"
                                            to_variable="$variable_in_foreach"
                                        [/set_variable]
                                        [while]
                                            [variable]
                                                name="k"
                                                less_than="$foreach"
                                            [/variable]
                                            [do]
                                                [set_variable]
                                                    name="index"
                                                    to_variable="attack_$count2|.specials.$count|.length"
                                                [/set_variable]
                                                {VARIABLE variable_name "attack_$count2|.specials.$count|[$index]"}
                                                {VARIABLE variable_to_variable "advanced.modifications.object[$i].specials_melee.$count|[$k]"}
                                                [set_variables]
                                                    name=$variable_name
                                                    mode=replace
                                                    to_variable=$variable_to_variable
                                                [/set_variables]
                                                {VARIABLE_OP k add 1}
                                            [/do]
                                        [/while]
                                        {CLEAR_VARIABLE k}
                                    [/do]
                                [/while]
                                {VARIABLE_OP j add 1}
                            [/do]
                        [/while]
                        {CLEAR_VARIABLE j}
                        {VARIABLE variable_in_foreach "advanced.modifications.object[$i].specials_ranged.$count|.length"}
                        [set_variable]
                            name="foreach"
                            to_variable="$variable_in_foreach"
                        [/set_variable]
                        [while]
                            [variable]
                                name="j"
                                less_than="$foreach"
                            [/variable]
                            [do]
                                {VARIABLE count2 nothing_yet}
                                [while]
                                    [variable]
                                        name=count2
                                        not_equals="bow"
                                    [/variable]
                                    [do]
                                        {TEXT_COUNT count2 xbow bow}
                                        {TEXT_COUNT count2 thunderstick xbow}
                                        {TEXT_COUNT count2 sling thunderstick}
                                        {TEXT_COUNT count2 knife sling}
                                        {TEXT_COUNT count2 nothing_yet knife}
                                        {VARIABLE variable_in_foreach "advanced.modifications.object[$i].specials_ranged.$count|.length"}
                                        [set_variable]
                                            name="foreach"
                                            to_variable="$variable_in_foreach"
                                        [/set_variable]
                                        [while]
                                            [variable]
                                                name="k"
                                                less_than="$foreach"
                                            [/variable]
                                            [do]
                                                [set_variable]
                                                    name="index"
                                                    to_variable="attack_$count2|.specials.$count|.length"
                                                [/set_variable]
                                                {VARIABLE variable_name "attack_$count2|.specials.$count|[$index]"}
                                                {VARIABLE variable_to_variable "advanced.modifications.object[$i].specials_ranged.$count|[$k]"}
                                                [set_variables]
                                                    name=$variable_name
                                                    mode=replace
                                                    to_variable=$variable_to_variable
                                                [/set_variables]
                                                {VARIABLE_OP k add 1}
                                            [/do]
                                        [/while]
                                        {CLEAR_VARIABLE k}
                                    [/do]
                                [/while]
                                {VARIABLE_OP j add 1}
                            [/do]
                        [/while]
                        {CLEAR_VARIABLE j}
                    [/do]
                [/while]
            [/then]
        [/if]

        {FOREACH advanced.modifications.object[$i].effect j}
            [if]
                [variable]
                    name=advanced.modifications.object[$i].effect[$j].apply_to
                    equals="max_attacks"
                [/variable]
                [then]
                    {VARIABLE_OP advanced.max_attacks add 1}
                [/then]
            [/if]
            [if]
                [variable]
                    name=advanced.modifications.object[$i].effect[$j].apply_to
                    equals="alignment"
                [/variable]
                [then]
                    {VARIABLE advanced.alignment $advanced.modifications.object[$i].effect[$j].alignment}
                [/then]
            [/if]
            [if]
                [variable]
                    name=advanced.modifications.object[$i].effect[$j].apply_to
                    equals="new_advancement"
                [/variable]
                [then]
                    {VARIABLE equals 0}		#Test whether it already has an advancement with that id
                    {FOREACH advanced.advancement m}
                        [set_variable]
                            name="that_id"
                            to_variable="advanced.modifications.object[$i].effect[$j].id"
                        [/set_variable]
                        [set_variable]
                            name="the_other_id"
#ifver WESNOTH_VERSION >= 1.13.2
                            to_variable="advanced.modifications.advancement[$m].id"
#else
                            to_variable="advanced.modifications.advance[$m].id"
#endif
                        [/set_variable]
                        [if]
                            [variable]
                                name=that_id
                                equals="$the_other_id"
                            [/variable]
                            [then]
                                {VARIABLE equals 1}
                            [/then]
                        [/if]
                    {NEXT m}
                    [if]
                        [variable]
                            name=equals
                            equals="0"
                        [/variable]
                        [then]
#ifver WESNOTH_VERSION >= 1.13.2
                            {VARIABLE advanced.modifications.advancement[$advanced.modifications.advancement.length].id $advanced.modifications.object[$i].effect[$j].id}
#else
                            {VARIABLE advanced.modifications.advance[$advanced.modifications.advance.length].id $advanced.modifications.object[$i].effect[$j].id}
#endif
                        [/then]
                    [/if]
                    {CLEAR_VARIABLE that_id,the_other_id,equals}
                [/then]
            [/if]
        {NEXT j}
    {NEXT i}
    #Apply bonuses to attacks, when they have been properly read
    {FOREACH advanced.attack i}
        {VARIABLE weapon_type other}
        [if]
            [variable]
                name=advanced.attack[$i].name
                contains="sword"
            [/variable]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="short sword"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="greatsword"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="saber"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="mberserk"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="whirlwind"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="spectral blades"
                [/variable]
            [/or]
            [then]
                {VARIABLE weapon_type sword}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.attack[$i].name
                equals="axe"
            [/variable]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="battle axe"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="axe_whirlwind"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="berserker frenzy"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="cleaver"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="hatchet"
                [/variable]
            [/or]
            [then]
                {VARIABLE weapon_type axe}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.attack[$i].name
                equals="bow"
            [/variable]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="longbow"
                [/variable]
            [/or]
            [then]
                {VARIABLE weapon_type bow}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.attack[$i].name
                equals="staff"
            [/variable]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="plague staff"
                [/variable]
            [/or]
            [then]
                {VARIABLE weapon_type staff}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.attack[$i].name
                equals="crossbow"
            [/variable]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="slurbow"
                [/variable]
            [/or]
            [then]
                {VARIABLE weapon_type xbow}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.attack[$i].name
                equals="dagger"
            [/variable]
            [then]
                {VARIABLE weapon_type dagger}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.attack[$i].name
                equals="knife"
            [/variable]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="throwing knife"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="throwing knives"
                [/variable]
            [/or]
            [then]
                {VARIABLE weapon_type knife}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.attack[$i].name
                equals="mace"
            [/variable]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="mace-spiked"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="morning star"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="club"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="flail"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="scourge"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="mace_berserk"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="hammer"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="hammer-runic"
                [/variable]
            [/or]
            [then]
                {VARIABLE weapon_type mace}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.attack[$i].name
                equals="spear"
            [/variable]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="javelin"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="lance"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="spike"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="pike"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="trident"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="trident-blade"
                [/variable]
            [/or]
            [then]
                {VARIABLE weapon_type spear}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.attack[$i].name
                equals="war talon"
            [/variable]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="war blade"
                [/variable]
            [/or]
            [then]
                {VARIABLE weapon_type exotic}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.attack[$i].name
                equals="halberd"
            [/variable]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="scythe"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="whirlwind-scythe"
                [/variable]
            [/or]
            [then]
                {VARIABLE weapon_type polearm}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.attack[$i].name
                equals="claws"
            [/variable]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="battle claws"
                [/variable]
            [/or]
            [then]
                {VARIABLE weapon_type claws}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.attack[$i].name
                equals="touch"
            [/variable]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="baneblade"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="faerie touch"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="vine"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="torch"
                [/variable]
            [/or]
            [then]
                {VARIABLE weapon_type essence}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.attack[$i].name
                equals="sling"
            [/variable]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="bolas"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="net"
                [/variable]
            [/or]
            [then]
                {VARIABLE weapon_type sling}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.attack[$i].name
                equals="thunderstick"
            [/variable]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="dragonstaff"
                [/variable]
            [/or]
            [then]
                {VARIABLE weapon_type thunderstick}
            [/then]
        [/if]
        [if]	#Apply bonuses to magical attacks, to everything that deals elemental damage
            [variable]
                name=advanced.attack[$i].name
                equals="thorns"
            [/variable]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="gossamer"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="entangle"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="ensnare"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].type
                    equals="fire"
                [/variable]
                [and]
                    [variable]
                        name=advanced.attack[$i].range
                        equals="ranged"
                    [/variable]
                [/and]
                [and]
                    [variable]
                        name=advanced.attack[$i].name
                        not_equals="bow"
                    [/variable]
                [/and]
                [and]
                    [variable]
                        name=advanced.attack[$i].name
                        not_equals="crossbow"
                    [/variable]
                [/and]
                [and]
                    [variable]
                        name=advanced.attack[$i].name
                        not_equals="slurbow"
                    [/variable]
                [/and]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].type
                    equals="lightning"
                [/variable]
                [and]
                    [variable]
                        name=advanced.attack[$i].range
                        equals="ranged"
                    [/variable]
                [/and]
                [not]
                    [variable]
                        name=advanced.attack[$i].name
                        equals="bow"
                    [/variable]
                [/not]
                [not]
                    [variable]
                        name=advanced.attack[$i].name
                        equals="crossbow"
                    [/variable]
                [/not]
                [not]
                    [variable]
                        name=advanced.attack[$i].name
                        equals="slurbow"
                    [/variable]
                [/not]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].type
                    equals="cold"
                [/variable]

                [and]
                    [variable]
                        name=advanced.attack[$i].range
                        equals="ranged"
                    [/variable]
                [/and]
                [not]
                    [variable]
                        name=advanced.attack[$i].name
                        equals="knife"
                    [/variable]
                [/not]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].type
                    equals="arcane"
                [/variable]

                [and]
                    [variable]
                        name=advanced.attack[$i].range
                        equals="ranged"
                    [/variable]
                [/and]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].type
                    equals="lightning"
                [/variable]
                [and]
                    [variable]
                        name=advanced.attack[$i].range
                        equals="ranged"
                    [/variable]
                [/and]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="water spray"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="ink"
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.attack[$i].name
                    equals="magic blast"
                [/variable]
            [/or]
            [then]
                {VARIABLE weapon_type magical}
                {VARIABLE_OP advanced.attack[$i].damage multiply $magic}
                {VARIABLE_OP advanced.attack[$i].damage divide 100}
                [if]
                    [variable]
                        name=spell_suck
                        greater_than_equal_to=1
                    [/variable]
                    [then]
                        [set_variables]
                            name=advanced.attack[$i].specials.dummy[$advanced.attack[$i].specials.dummy.length]
                            mode=replace
                            [value]
                                id=spell_suck
                                suck=$spell_suck
                            [/value]
                        [/set_variables]
                    [/then]
                [/if]
            [/then]
        [/if]
        [if]
            [variable]
                name=weapon_type
                not_equals=magical
            [/variable]
            [then]
                {VARIABLE_OP advanced.attack[$i].damage multiply $attack_$weapon_type|.damage}
                {VARIABLE_OP advanced.attack[$i].damage divide 100}
                {VARIABLE_OP advanced.attack[$i].damage add $attack_$weapon_type|.damage_plus}
                {VARIABLE_OP advanced.attack[$i].number multiply $attack_$weapon_type|.attacks}
                {VARIABLE_OP advanced.attack[$i].number divide 100}
                [if]
                    [variable]
                        name=weapon_type
                        not_equals=thunderstick
                    [/variable] # This would be overpowered
                    [then]
			{VARIABLE remainder $advanced.attack[$i].number}
			{VARIABLE_OP remainder add $attack_$weapon_type|.attacks_plus}
			[if]
				[variable]
					name=remainder
					less_than=1
				[/variable]
				[then]
		                        {VARIABLE advanced.attack[$i].number 1}
				[/then]
				[else]
		                        {VARIABLE_OP advanced.attack[$i].number add $attack_$weapon_type|.attacks_plus}
				[/else]
			[/if]
			{CLEAR_VARIABLE remainder}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=attack_$weapon_type|.icon
                        contains="png"
                    [/variable]
                    [then]
                        {VARIABLE advanced.attack[$i].icon $attack_$weapon_type|.icon}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=attack_$weapon_type|.suck
                        greater_than=0
                    [/variable]
                    [then]
                        [set_variables]
                            name=advanced.attack[$i].specials.dummy[$advanced.attack[$i].specials.dummy.length]
                            mode=replace
                            [value]
                                id=suck
                                suck=$attack_$weapon_type|.suck
                            [/value]
                        [/set_variables]
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=attack_$weapon_type|.devastating_blow
                        greater_than=0
                    [/variable]
                    [then]
                        [set_variables]
                            name=advanced.attack[$i].specials.dummy[$advanced.attack[$i].specials.dummy.length]
                            mode=replace
                            [value]
                                id=devastating_blow
                                devastating_blow=$attack_$weapon_type|.devastating_blow
                            [/value]
                        [/set_variables]
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=attack_$weapon_type|.merge
                        equals=yes
                    [/variable]
                    [then]
                        {VARIABLE final_damage "$($advanced.attack[$i].damage*$advanced.attack[$i].number)"}
                        {VARIABLE advanced.attack[$i].damage $final_damage}
                        {VARIABLE advanced.attack[$i].number 1}
                        {CLEAR_VARIABLE final_damage}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=attack_$weapon_type|.weapon_damage_type
                        not_equals=0
                    [/variable]
                    [then]
                        {VARIABLE advanced.attack[$i].type $attack_$weapon_type|.weapon_damage_type}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=attack_$weapon_type|.other_damage_type
                        not_equals=0
                    [/variable]
                    [then]
                        {VARIABLE advanced.attack[$i].type $attack_$weapon_type|.other_damage_type}
                    [/then]
                [/if]
                [if]
                    [variable]
                        name=attack_$weapon_type|.name
                        not_equals=0
                    [/variable]
                    [then]
                        {VARIABLE advanced.attack[$i].description $attack_$weapon_type|.name}
                    [/then]
                [/if]

                {VARIABLE count nothing_yet}
                [while]
                    [variable]
                        name=count
                        not_equals="poison"
                    [/variable]
                    [do]
                        {TEXT_COUNT count firststrike poison}
                        {TEXT_COUNT count attacks firststrike}
                        {TEXT_COUNT count slow attacks}
                        {TEXT_COUNT count plague slow}
                        {TEXT_COUNT count chance_to_hit plague}
                        {TEXT_COUNT count berserk chance_to_hit}
                        {TEXT_COUNT count damage berserk}
                        {TEXT_COUNT count dummy damage}
                        {TEXT_COUNT count drains dummy}
                        {TEXT_COUNT count swarm drains}
                        {TEXT_COUNT count nothing_yet swarm}
                        {VARIABLE variable_in_foreach "attack_$weapon_type|.specials.$count|.length"}

                        [set_variable]
                            name="foreach"
                            to_variable="$variable_in_foreach"
                        [/set_variable]
                        [while]
                            [variable]
                                name="j"
                                less_than="$foreach"
                            [/variable]
                            [do]
                                [set_variable]
                                    name="index"
                                    to_variable="advanced.attack[$i].specials.$count|.length"
                                [/set_variable]
                                {VARIABLE variable_name "advanced.attack[$i].specials.$count|[$index]"}
                                {VARIABLE variable_to_variable "attack_$weapon_type|.specials.$count|[$j]"}
                                [set_variables]
                                    name=$variable_name
                                    mode=replace
                                    to_variable=$variable_to_variable
                                [/set_variables]
                                {VARIABLE_OP j add 1}
                            [/do]
                        [/while]
                        {CLEAR_VARIABLE j}
                    [/do]
                [/while]
            [/then]
        [/if]
    {NEXT i}
    #Apply bonuses to resistances
    {VARIABLE_OP advanced.resistance.fire sub $fire_resist}
    {VARIABLE_OP advanced.resistance.cold sub $cold_resist}
    {VARIABLE_OP advanced.resistance.arcane sub $arcane_resist}
    {VARIABLE_OP advanced.resistance.blade sub $blade_resist}
    {VARIABLE_OP advanced.resistance.pierce sub $pierce_resist}
    {VARIABLE_OP advanced.resistance.impact sub $impact_resist}

    #Apply vision bonus
#ifver WESNOTH_VERSION >= 1.11.0
    {VARIABLE advanced.vision "$($vision+$advanced.max_moves)"}
#endif

    {FOREACH defence i} 	#Apply bonuses to resistance from the defence item property
        {VARIABLE_OP advanced.resistance.blade multiply "$(100-$defence[$i].defence)"}
        {VARIABLE_OP advanced.resistance.blade divide 100}		#To avoid bad rounding
        {VARIABLE_OP advanced.resistance.pierce multiply "$(100-$defence[$i].defence)"}
        {VARIABLE_OP advanced.resistance.pierce divide 100}
        {VARIABLE_OP advanced.resistance.impact multiply "$(100-$($defence[$i].defence)/2)"}	#Hammers always penetrated armours better than swords
        {VARIABLE_OP advanced.resistance.impact divide 100}
    {NEXT i}
    {APPLY_PENETRATIONS fire}
    {APPLY_PENETRATIONS cold}
    {APPLY_PENETRATIONS arcane}
    {APPLY_PENETRATIONS blade}
    {APPLY_PENETRATIONS impact}
    {APPLY_PENETRATIONS pierce}
    {FOREACH block i}	#Apply bonuses to defences
        {CALCULATE_DEFENCE fungus}
        {CALCULATE_DEFENCE swamp_water}
        {CALCULATE_DEFENCE forest}
        {CALCULATE_DEFENCE hills}
        {CALCULATE_DEFENCE mountains}
        {CALCULATE_DEFENCE castle}
        {CALCULATE_DEFENCE cave}
        {CALCULATE_DEFENCE village}
        {CALCULATE_DEFENCE reef}
        {CALCULATE_DEFENCE shallow_water}
        {CALCULATE_DEFENCE deep_water}
        {CALCULATE_DEFENCE swamp_water}
        {CALCULATE_DEFENCE frozen}
        {CALCULATE_DEFENCE sand}
        {CALCULATE_DEFENCE flat}
        {CALCULATE_DEFENCE cave}
        {CALCULATE_DEFENCE unwalkable}
    {NEXT i}
    {CLEAR_VARIABLE fire_resist,cold_resist,arcane_resist,blade_resist,pierce_resist,impact_resist,defence,block,magic,attack,attack_sword,attack_axe}
    {CLEAR_VARIABLE attack_bow,attack_xbow,attack_mace,attack_spear,attack_knife,attack_dagger,attack_staff,attack_other,attack_sling,attack_thunderstick,attack_polearm,attack_exotic,attack_claws,attack_essence}
    {UPDATE_ATTACKS_STUFF}
    [if]	#Resistance cap
        [variable]
            name=advanced.resistance.blade
            less_than=20
        [/variable]
        [then]
            {VARIABLE advanced.resistance.blade 20}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.resistance.impact
            less_than=20
        [/variable]
        [then]
            {VARIABLE advanced.resistance.impact 20}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.resistance.pierce
            less_than=20
        [/variable]
        [then]
            {VARIABLE advanced.resistance.pierce 20}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.resistance.fire
            less_than=10
        [/variable]
        [then]
            {VARIABLE advanced.resistance.fire 10}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.resistance.cold
            less_than=10
        [/variable]
        [then]
            {VARIABLE advanced.resistance.cold 10}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.resistance.arcane
            less_than=30
        [/variable]
        [then]
            {VARIABLE advanced.resistance.arcane 30}
        [/then]
    [/if]
    #Defence cap
    {LIMIT_DEFENCE fungus}
    {LIMIT_DEFENCE swamp_water}
    {LIMIT_DEFENCE forest}
    {LIMIT_DEFENCE hills}
    {LIMIT_DEFENCE mountains}
    {LIMIT_DEFENCE castle}
    {LIMIT_DEFENCE cave}
    {LIMIT_DEFENCE village}
    {LIMIT_DEFENCE coastal_reef}
    {LIMIT_DEFENCE shallow_water}
    {LIMIT_DEFENCE deep_water}
    {LIMIT_DEFENCE swamp_water}
    {LIMIT_DEFENCE frozen}
    {LIMIT_DEFENCE sand}
    {LIMIT_DEFENCE flat}
    {LIMIT_DEFENCE cave}
    {LIMIT_DEFENCE unwalkable}

    {FOREACH advanced.abilities.illuminates i}
        [if]	#Give a visual representation to illumination or darkening
            [variable]
                name=advanced.abilities.illuminates[$i].value
                greater_than=0
            [/variable]
            [then]
                {VARIABLE advanced.halo halo/illuminates-aura.png}
            [/then]
        [/if]
    {NEXT i}
    {FOREACH advanced.abilities.illuminates i}
        [if]
            [variable]
                name=advanced.abilities.illuminates[$i].value
                less_than=0
            [/variable]
            [then]
                {VARIABLE advanced.halo halo/darkens-aura.png}
            [/then]
        [/if]
    {NEXT i}
    #Make special leaderships and other important stuff visible; these things' visuals can't be combined, because WML can't learn the size of images
    {FOREACH advanced.abilities.dummy i}
        [if]
            [variable]
                name=advanced.abilities.dummy[$i].id
                equals=berserk_leadership
            [/variable]
            [then]
                {VARIABLE advanced.halo "misc/berserk-1.png:100,misc/berserk-2.png:100,misc/berserk-3.png:100,misc/berserk-2.png:100"}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.abilities.dummy[$i].id
                equals=charge_leadership
            [/variable]
            [then]
                {VARIABLE advanced.halo "misc/charge-1.png:100,misc/charge-2.png:100,misc/charge-3.png:100,misc/charge-2.png:100"}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.abilities.dummy[$i].id
                equals=poison_leadership
            [/variable]
            [then]
                {VARIABLE advanced.halo "misc/poison-1.png:200,misc/poison-2.png:200,misc/poison-3.png:200,misc/poison-2.png:200"}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.abilities.dummy[$i].id
                equals=firststrike_leadership
            [/variable]
            [then]
                {VARIABLE advanced.halo "misc/firststrike-1.png:100,misc/firststrike-2.png:100,misc/firststrike-3.png:100"}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.abilities.dummy[$i].id
                equals=backstab_leadership
            [/variable]
            [then]
                {VARIABLE advanced.halo "misc/backstab-1.png:200,misc/backstab-2.png:200,misc/backstab-3.png:200,misc/backstab-2.png:200"}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.abilities.dummy[$i].id
                equals=marksman_leadership
            [/variable]
            [then]
                {VARIABLE advanced.halo "misc/marksman-1.png:100,misc/marksman-2.png:100,misc/marksman-3.png:100,misc/marksman-2.png:100"}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.abilities.dummy[$i].id
                equals=drain_leadership
            [/variable]
            [then]
                {VARIABLE advanced.halo "misc/drain-1.png:200,misc/drain-2.png:200,misc/drain-3.png:200,misc/drain-2.png:200"}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.abilities.dummy[$i].id
                equals=northfrost aura
            [/variable]
            [then]
                {VARIABLE advanced.halo "halo/blizzard-1.png~O(40%):100,halo/blizzard-2.png~O(40%):100,halo/blizzard-3.png~O(40%):100"}
            [/then]
        [/if]
    {NEXT i}
    #Remove special attacks and saved gem pickups
    {FOREACH advanced.modifications.object i}
        [if]
            [variable]
                name=advanced.modifications.object[$i].sort
                equals=temporary
            [/variable]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=gem
                [/variable]
            [/or]
            [then]
                {CLEAR_VARIABLE advanced.modifications.object[$i]}
                {VARIABLE_OP i sub 1}
            [/then]
        [/if]
    {NEXT i}

    [if]
        [variable]
            name=advanced.type
            contains=Elvish Assassin
        [/variable]
        [then]
            [set_variables]
                mode=replace
#ifver WESNOTH_VERSION >= 1.13.2
                name=advanced.modifications.advancement[$advanced2.modifications.advancement]
#else
                name=advanced.modifications.advance[$advanced2.modifications.advance]
#endif
                [value]
                    max_times=1
                    always_display=yes
                    id=execution
                    image=attacks/bow-elven-magic.png
                    strict_amla=yes
                    require_amla=""
                    [effect]
                        apply_to=remove_attack
                        name=execution
                    [/effect]
                    [effect]
                        apply_to=bonus_attack
                        name=execution_bonus_attack
                        description= _ "execution"
                        icon=attacks/bow-elven-magic.png
                        range=ranged
                        defense_weight=0
                        damage=-40
                        merge=yes
                        force_original_attack=longbow
                    [/effect]
                [/value]
            [/set_variables]
        [/then]
        [else]
        [/else]
    [/if]

#ifver WESNOTH_VERSION >= 1.13.2
    {FOREACH advanced.modifications.advancement i}
#else
    {FOREACH advanced.modifications.advance i}
#endif
#ifver WESNOTH_VERSION >= 1.13.2
        {FOREACH advanced.modifications.advancement[$i].effect j}
#else
        {FOREACH advanced.modifications.advance[$i].effect j}
#endif
            [if]
                [variable]
#ifver WESNOTH_VERSION >= 1.13.2
                    name=advanced.modifications.advancement[$i].effect[$j].apply_to
#else
                    name=advanced.modifications.advance[$i].effect[$j].apply_to
#endif
                    equals=bonus_attack
                [/variable]
                [then]
                    {VARIABLE strongest_attack 0}
                    {FOREACH advanced.attack k}
                        [if]
                            [variable]
                                name=advanced.attack[$k].name
#ifver WESNOTH_VERSION >= 1.13.2
                                equals=$advanced.modifications.advancement[$i].effect[$j].force_original_attack
#else
                                equals=$advanced.modifications.advance[$i].effect[$j].force_original_attack
#endif
                            [/variable]
                            [then]
                                {VARIABLE strongest_attack 100000000000}		#No attack can beat the chosen one
                                {VARIABLE strongest_attack_id $k}
                            [/then]
                        [/if]
                        [if]
                            [variable]
                                name=advanced.attack[$k].range
#ifver WESNOTH_VERSION >= 1.13.2
                                equals=$advanced.modifications.advancement[$i].effect[$j].range
#else
                                equals=$advanced.modifications.advance[$i].effect[$j].range
#endif
                            [/variable]
                            [then]
                                {VARIABLE this_attack $advanced.attack[$k].damage}
                                {VARIABLE_OP this_attack multiply $advanced.attack[$k].number}
                                [if]
                                    [variable]
                                        name=this_attack
                                        greater_than=$strongest_attack
                                    [/variable]
                                    [not]
                                        [variable]
                                            name=advanced.attack[$k].temporary
                                            equals=yes
                                        [/variable]
                                    [/not]
                                    [then]
                                        {VARIABLE strongest_attack $this_attack}
                                        {VARIABLE strongest_attack_id $k}
                                    [/then]
                                [/if]
                            [/then]
                        [/if]
                        [if]
                            [variable]
                                name=advanced.attack[$k].name
#ifver WESNOTH_VERSION >= 1.13.2
                                equals=$advanced.modifications.advancement[$i].effect[$j].name
#else
                                equals=$advanced.modifications.advance[$i].effect[$j].name
#endif
                            [/variable]
                            [then]
                                {VARIABLE has_this_attack 1}
                            [/then]
                        [/if]
                    {NEXT k}
                    [if]
                        [variable]
                            name=has_this_attack
                            equals=1
                        [/variable]
                        [else]
                            [if]
                                [variable]
                                    name=strongest_attack
                                    greater_than=0
                                [/variable]
                                [then]
                                    [set_variables]
                                        name=advanced.attack[$advanced.attack.length]
                                        mode=replace
                                        to_variable=advanced.attack[$strongest_attack_id]
                                    [/set_variables]
                                [/then]
                                [else]
                                    [set_variables]
                                        name=advanced.attack[$advanced.attack.length]
                                        mode=replace
                                        [value]
                                            name=fangs
                                            description=_"fangs"
                                            icon=attacks/fangs-animal.png
                                            type=blade
                                            range=melee
                                            damage=5
                                            number=4
                                        [/value]
                                    [/set_variables]
                                [/else]
                            [/if]
                            [if]
                                [variable]
#ifver WESNOTH_VERSION >= 1.13.2
                                    name=advanced.modifications.advancement[$i].effect[$j].clone_anim
#else
                                    name=advanced.modifications.advance[$i].effect[$j].clone_anim
#endif
                                    equals=yes
                                [/variable]
                                [then]
                                    [store_unit_type]
                                        type=$advanced.type
                                        variable=unit_style
                                    [/store_unit_type]
                                    {FOREACH unit_style.attack_anim a}
                                        [if]
                                            [variable]
                                                name=unit_style.attack_anim[$a].filter_attack.name
                                                equals=$advanced.attack[$strongest_attack_id].name
                                            [/variable]
                                            [then]
                                                {VARIABLE anim_index $a}
                                            [/then]
                                        [/if]
                                    {NEXT a}
                                    [set_variables]
                                        name=anim_object
                                        mode=replace
                                        [value]
                                            sort=temporary
                                            silent=yes
                                            [filter]
                                                x,y=$advanced.x,$advanced.y
                                            [/filter]
                                            [effect]
                                                apply_to=new_animation
#ifver WESNOTH_VERSION >= 1.13.2
                                                name=aa$advanced.modifications.advancement[$i].effect[$j].name
#else
                                                name=aa$advanced.modifications.advance[$i].effect[$j].name
#endif
                                                [insert_tag]
                                                    name=attack_anim
                                                    variable=unit_style.attack_anim[$anim_index]
                                                [/insert_tag]
                                            [/effect]
                                        [/value]
                                    [/set_variables]
                                    [if]
                                        [variable]
                                            name=advanced.gender
                                            equals=female
                                        [/variable]
                                        [and]
                                            [variable]
                                                name=unit_style.female.length
                                                not_equals=0
                                            [/variable]
                                        [/and]
                                        [then]
                                            [set_variables]
                                                name=anim_object
                                                mode=replace
                                                [value]
                                                    sort=temporary
                                                    silent=yes
                                                    [filter]
                                                        x,y=$advanced.x,$advanced.y
                                                    [/filter]
                                                    [effect]
                                                        apply_to=new_animation
#ifver WESNOTH_VERSION >= 1.13.2
                                                        name=aa$advanced.modifications.advancement[$i].effect[$j].name
#else
                                                        name=aa$advanced.modifications.advance[$i].effect[$j].name
#endif
                                                        [insert_tag]
                                                            name=attack_anim
                                                            variable=unit_style.female.attack_anim[$anim_index]
                                                        [/insert_tag]
                                                    [/effect]
                                                [/value]
                                            [/set_variables]
                                        [/then]
                                    [/if]
#ifver WESNOTH_VERSION >= 1.13.2
                                    {VARIABLE anim_object.effect.attack_anim.filter_attack.name $advanced.modifications.advancement[$i].effect[$j].name}
#else
                                    {VARIABLE anim_object.effect.attack_anim.filter_attack.name $advanced.modifications.advance[$i].effect[$j].name}
#endif
                                    [set_variables]
                                        name=objects_to_add
                                        mode=append
                                        to_variable=anim_object
                                    [/set_variables]
                                [/then]
                            [/if]
#ifver WESNOTH_VERSION >= 1.13.2
                            {VARIABLE "advanced.attack[$($advanced.attack.length-1)].name" $advanced.modifications.advancement[$i].effect[$j].name}
#else
                            {VARIABLE "advanced.attack[$($advanced.attack.length-1)].name" $advanced.modifications.advance[$i].effect[$j].name}
#endif
#ifver WESNOTH_VERSION >= 1.13.2
                            {VARIABLE "advanced.attack[$($advanced.attack.length-1)].description" $advanced.modifications.advancement[$i].effect[$j].description}
#else
                            {VARIABLE "advanced.attack[$($advanced.attack.length-1)].description" $advanced.modifications.advance[$i].effect[$j].description}
#endif
                            [if]
                                [variable]
#ifver WESNOTH_VERSION >= 1.13.2
                                    name=advanced.modifications.advancement[$i].effect[$j].type
#else
                                    name=advanced.modifications.advance[$i].effect[$j].type
#endif
                                    not_equals=""
                                [/variable]
                                [then]
#ifver WESNOTH_VERSION >= 1.13.2
                                    {VARIABLE "advanced.attack[$($advanced.attack.length-1)].type" $advanced.modifications.advancement[$i].effect[$j].type}
#else
                                    {VARIABLE "advanced.attack[$($advanced.attack.length-1)].type" $advanced.modifications.advance[$i].effect[$j].type}
#endif
                                [/then]
                            [/if]
#ifver WESNOTH_VERSION >= 1.13.2
                            {VARIABLE "advanced.attack[$($advanced.attack.length-1)].icon" $advanced.modifications.advancement[$i].effect[$j].icon}
#else
                            {VARIABLE "advanced.attack[$($advanced.attack.length-1)].icon" $advanced.modifications.advance[$i].effect[$j].icon}
#endif
                            {VARIABLE damage 0}
                            {VARIABLE attacks 0}
                            [if]
                                [variable]
#ifver WESNOTH_VERSION >= 1.13.2
                                    name=advanced.modifications.advancement[$i].effect[$j].damage
#else
                                    name=advanced.modifications.advance[$i].effect[$j].damage
#endif
                                    not_equals=""
                                [/variable]
                                [then]
#ifver WESNOTH_VERSION >= 1.13.2
                                    {VARIABLE_OP damage add $advanced.modifications.advancement[$i].effect[$j].damage}
#else
                                    {VARIABLE_OP damage add $advanced.modifications.advance[$i].effect[$j].damage}
#endif
                                [/then]
                            [/if]
                            [if]
                                [variable]
#ifver WESNOTH_VERSION >= 1.13.2
                                    name=advanced.modifications.advancement[$i].effect[$j].number
#else
                                    name=advanced.modifications.advance[$i].effect[$j].number
#endif
                                    not_equals=""
                                [/variable]
                                [then]
#ifver WESNOTH_VERSION >= 1.13.2
                                    {VARIABLE_OP attacks add $advanced.modifications.advancement[$i].effect[$j].number}
#else
                                    {VARIABLE_OP attacks add $advanced.modifications.advance[$i].effect[$j].number}
#endif
                                [/then]
                            [/if]
#ifver WESNOTH_VERSION >= 1.13.2
                            {FOREACH advanced.modifications.advancement d}
#else
                            {FOREACH advanced.modifications.advance d}
#endif
#ifver WESNOTH_VERSION >= 1.13.2
                                {FOREACH advanced.modifications.advancement[$d].effect e}
#else
                                {FOREACH advanced.modifications.advance[$d].effect e}
#endif
                                    [if]
                                        [variable]
#ifver WESNOTH_VERSION >= 1.13.2
                                            name=advanced.modifications.advancement[$d].effect[$e].apply_to
#else
                                            name=advanced.modifications.advance[$d].effect[$e].apply_to
#endif
                                            equals=improve_bonus_attack
                                        [/variable]
                                        [then]
                                            [if]
                                                [variable]
#ifver WESNOTH_VERSION >= 1.13.2
                                                    name=advanced.modifications.advancement[$d].effect[$e].name
#else
                                                    name=advanced.modifications.advance[$d].effect[$e].name
#endif
#ifver WESNOTH_VERSION >= 1.13.2
                                                    equals=$advanced.modifications.advancement[$i].effect[$j].name
#else
                                                    equals=$advanced.modifications.advance[$i].effect[$j].name
#endif
                                                [/variable]
                                                [then]
                                                    [if]
                                                        [variable]
#ifver WESNOTH_VERSION >= 1.13.2
                                                            name=advanced.modifications.advancement[$d].effect[$e].increase_damage
#else
                                                            name=advanced.modifications.advance[$d].effect[$e].increase_damage
#endif
                                                            not_equals=""
                                                        [/variable]
                                                        [then]
#ifver WESNOTH_VERSION >= 1.13.2
                                                            {VARIABLE_OP damage add $advanced.modifications.advancement[$d].effect[$e].increase_damage}
#else
                                                            {VARIABLE_OP damage add $advanced.modifications.advance[$d].effect[$e].increase_damage}
#endif
                                                        [/then]
                                                    [/if]
                                                    [if]
                                                        [variable]
#ifver WESNOTH_VERSION >= 1.13.2
                                                            name=advanced.modifications.advancement[$d].effect[$e].increase_attacks
#else
                                                            name=advanced.modifications.advance[$d].effect[$e].increase_attacks
#endif
                                                            not_equals=""
                                                        [/variable]
                                                        [then]
#ifver WESNOTH_VERSION >= 1.13.2
                                                            {VARIABLE_OP attacks add $advanced.modifications.advancement[$d].effect[$e].increase_attacks}
#else
                                                            {VARIABLE_OP attacks add $advanced.modifications.advance[$d].effect[$e].increase_attacks}
#endif
                                                        [/then]
                                                    [/if]
                                                [/then]
                                            [/if]
                                        [/then]
                                    [/if]
                                {NEXT e}
                            {NEXT d}
                            {VARIABLE_OP "advanced.attack[$($advanced.attack.length-1)].damage" multiply "$(100+$damage)"}
                            {VARIABLE_OP "advanced.attack[$($advanced.attack.length-1)].damage" divide 100}
                            {VARIABLE_OP "advanced.attack[$($advanced.attack.length-1)].number" multiply "$(100+$attacks)"}
                            {VARIABLE_OP "advanced.attack[$($advanced.attack.length-1)].number" divide 100}
                            [if]	# Prevent it from reducing the attack count bellow 1
                                [variable]
                                    name="advanced.attack[$($advanced.attack.length-1)].number"
                                    less_than=1
                                [/variable]
                                [then]
                                    {VARIABLE "advanced.attack[$($advanced.attack.length-1)].number" 1}
                                [/then]
                            [/if]
                            {CLEAR_VARIABLE damage,number}
                            [if]
                                [variable]
#ifver WESNOTH_VERSION >= 1.13.2
                                    name=advanced.modifications.advancement[$i].effect[$j].attack_weight
#else
                                    name=advanced.modifications.advance[$i].effect[$j].attack_weight
#endif
                                    not_equals=""
                                [/variable]
                                [then]
#ifver WESNOTH_VERSION >= 1.13.2
                                    {VARIABLE "advanced.attack[$($advanced.attack.length-1)].attack_weight" $advanced.modifications.advancement[$i].effect[$j].attack_weight}
#else
                                    {VARIABLE "advanced.attack[$($advanced.attack.length-1)].attack_weight" $advanced.modifications.advance[$i].effect[$j].attack_weight}
#endif
                                [/then]
                            [/if]
                            [if]
                                [variable]
#ifver WESNOTH_VERSION >= 1.13.2
                                    name=advanced.modifications.advancement[$i].effect[$j].defense_weight
#else
                                    name=advanced.modifications.advance[$i].effect[$j].defense_weight
#endif
                                    not_equals=""
                                [/variable]
                                [then]
#ifver WESNOTH_VERSION >= 1.13.2
                                    {VARIABLE "advanced.attack[$($advanced.attack.length-1)].defense_weight" $advanced.modifications.advancement[$i].effect[$j].defense_weight}
#else
                                    {VARIABLE "advanced.attack[$($advanced.attack.length-1)].defense_weight" $advanced.modifications.advance[$i].effect[$j].defense_weight}
#endif
                                [/then]
                            [/if]
                            [if]
                                [variable]
#ifver WESNOTH_VERSION >= 1.13.2
                                    name=advanced.modifications.advancement[$i].effect[$j].merge
#else
                                    name=advanced.modifications.advance[$i].effect[$j].merge
#endif
                                    equals=yes
                                [/variable]
                                [then]
                                    {VARIABLE damage "$advanced.attack[$($advanced.attack.length-1)].damage"}
                                    {VARIABLE_OP damage multiply "$advanced.attack[$($advanced.attack.length-1)].number"}
                                    {VARIABLE "advanced.attack[$($advanced.attack.length-1)].damage" $damage}
                                    {CLEAR_VARIABLE damage}
                                    {VARIABLE "advanced.attack[$($advanced.attack.length-1)].number" 1}
                                [/then]
                            [/if]
                            {VARIABLE count nothing_yet}
                            [while]
                                [variable]
                                    name=count
                                    not_equals="poison"
                                [/variable]
                                [do]
                                    {TEXT_COUNT count firststrike poison}
                                    {TEXT_COUNT count attacks firststrike}
                                    {TEXT_COUNT count swarm attacks}
                                    {TEXT_COUNT count plague swarm}
                                    {TEXT_COUNT count chance_to_hit plague}
                                    {TEXT_COUNT count berserk chance_to_hit}
                                    {TEXT_COUNT count damage berserk}
                                    {TEXT_COUNT count dummy damage}
                                    {TEXT_COUNT count drains dummy}
                                    {TEXT_COUNT count slow drains}
                                    {TEXT_COUNT count nothing_yet slow}
#ifver WESNOTH_VERSION >= 1.13.2
                                    {VARIABLE variable_in_foreach "advanced.modifications.advancement[$i].effect[$k].specials.$count|.length"}
#else
                                    {VARIABLE variable_in_foreach "advanced.modifications.advance[$i].effect[$k].specials.$count|.length"}
#endif
                                    [set_variable]
                                        name="foreach"
                                        to_variable="$variable_in_foreach"
                                    [/set_variable]
                                    [while]
                                        [variable]
                                            name="k"
                                            less_than="$foreach"
                                        [/variable]
                                        [do]
                                            [set_variable]
                                                name="index"
                                                to_variable="advanced.attack[$($advanced.attack.length-1)].specials.$count|.length"
                                            [/set_variable]
                                            {VARIABLE variable_name "advanced.attack[$($advanced.attack.length-1)].specials.$count|[$index]"}
#ifver WESNOTH_VERSION >= 1.13.2
                                            {VARIABLE variable_to_variable "advanced.modifications.advancement[$i].effect[$k].specials.$count|[$k]"}
#else
                                            {VARIABLE variable_to_variable "advanced.modifications.advance[$i].effect[$k].specials.$count|[$k]"}
#endif
                                            [set_variables]
                                                name=$variable_name
                                                mode=replace
                                                to_variable=$variable_to_variable
                                            [/set_variables]
                                            {VARIABLE_OP k add 1}
                                        [/do]
                                    [/while]
                                    {CLEAR_VARIABLE k}
                                [/do]
                            [/while]
                            {VARIABLE "advanced.attack[$($advanced.attack.length-1)].temporary" yes}
                        [/else]
                    [/if]
                    {CLEAR_VARIABLE strongest_attack,strongest_attack_id,this_attack,has_this_attack,anim_object,anim_index,unit_style,last_attack}
                [/then]
            [/if]
        {NEXT j}
    {NEXT i}
    {FOREACH advanced.abilities.teleport i}
        [if]
            [variable]
                name=advanced.abilities.teleport[$i].id
                equals=teleport
            [/variable]
            [then]
                [set_variables]
                    name=advanced.abilities.teleport[$i]
                    mode=replace
                    [literal]
                        id=teleport
                        name= _ "teleport"
                        female_name= _ "female^teleport"
                        description= _ "This unit may teleport between any two empty villages owned by its side using one of its moves."
                        [tunnel]
                            id=village_teleport
                            [source]
                                terrain=*^V*
                                owner_side=$teleport_unit.side
                                [not]
                                    [filter]
                                        [not]
                                            id=$teleport_unit.id
                                        [/not]
                                    [/filter]
                                [/not]
                            [/source]

                            [target]
                                terrain=*^V*
                                owner_side=$teleport_unit.side
                                [not]
                                    [filter]
                                    [/filter]
                                [/not]
                            [/target]

                            [filter]
                                ability=teleport
                            [/filter]
                        [/tunnel]
                    [/literal]
                [/set_variables]
            [/then]
        [/if]
    {NEXT i}
    [if]
        [variable]
            name=advanced.race
            not_equals=undead
        [/variable]
        [then]
            [if]
                [variable]
                    name=has_legacy
                    equals=0
                [/variable]
                [then]
                    {VARIABLE_OP legacy_type rand (fire_dragon_legacy,ice_dragon_legacy,dark_dragon_legacy,undead_legacy,legacy_of_kings,legacy_of_titans,legacy_of_sorrow,legacy_of_light,legacy_of_phoenix,legacy_of_exile,legacy_of_the_freezing_north,legacy_of_the_free)}
#ifver WESNOTH_VERSION >= 1.13.2
                    {VARIABLE advanced.modifications.advancement[$advanced.modifications.advancement.length].id $legacy_type}
#else
                    {VARIABLE advanced.modifications.advance[$advanced.modifications.advance.length].id $legacy_type}
#endif
                [/then]
            [/if]
        [/then]
    [/if]
    {CLEAR_VARIABLE has_legacy,legacy_type}
    {VARIABLE advanced.variables.updated yes}

    {FOREACH advanced.variables.disabled_defences i}
        [if]
            [variable]
                name=advanced.attack[$advanced.variables.disabled_defences[$i].order].name
                equals=$advanced.variables.disabled_defences[$i].name
            [/variable]
            [then]
                {VARIABLE advanced.attack[$advanced.variables.disabled_defences[$i].order].defense_weight 0}
            [/then]
            [else]
                {CLEAR_VARIABLE advanced.variables.disabled_defences[$i]}
                {VARIABLE_OP i sub 1}
            [/else]
        [/if]
    {NEXT i}
#enddef
#define CALCULATE_LAST_THINGS

#ifdef MULTIPLAYER
    [if]
        [variable]
            name=advanced.type
            equals="Necromancer"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "09 Ancient Lich,Arch Necromancer"}
            {VARIABLE advanced.max_experience 180}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Lich"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "09 Ancient Lich,Lich King"}
            {VARIABLE advanced.max_experience 180}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Master Bowman"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Champion Bowman"}
            {VARIABLE advanced.max_experience 180}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Draug"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Deathlord"}
            {VARIABLE advanced.max_experience 150}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Death Knight"
        [/variable]
        [or]
            [variable]
                name=advanced.type
                equals="Death Knight LotI"
            [/variable]
        [/or]
        [then]
            {VARIABLE advanced.advances_to "Deathlord,Lich King"}
            {VARIABLE advanced.max_experience 150}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Iron Mauler"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Destroyer,Blackguard"}
            {VARIABLE advanced.max_experience 192}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Royal Guard"
        [/variable]
        [or]
            [variable]
                name=advanced.type
                equals="Royal Guard LotI"
            [/variable]
        [/or]
        [then]
            {VARIABLE advanced.advances_to "Swordmaster"}
            {VARIABLE advanced.max_experience 192}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Grand Knight"
        [/variable]
        [or]
            [variable]
                name=advanced.type
                equals="Grand Knight LotI"
            [/variable]
        [/or]
        [or]
            [variable]
                name=advanced.type
                equals="Cavalier"
            [/variable]
        [/or]
        [then]
            {VARIABLE advanced.advances_to "Chaos Rider"}
            {VARIABLE advanced.max_experience 192}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Grand Marshal"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Dragon Rider,Duke"}
            {VARIABLE advanced.max_experience 300}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Great Mage"
        [/variable]
        [or]
            [variable]
                name=advanced.type
                equals="08 Great Mage"
            [/variable]
        [/or]
        [then]
            {VARIABLE advanced.advances_to "Elder Mage LotI"}
            {VARIABLE advanced.max_experience 300}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Ranger"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Forester"}
            {VARIABLE advanced.max_experience 180}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Huntsman"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Predator"}
            {VARIABLE advanced.max_experience 190}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Grand Knight"
        [/variable]
        [or]
            [variable]
                name=advanced.type
                equals="Grand Knight LotI"
            [/variable]
        [/or]
        [or]
            [variable]
                name=advanced.type
                equals="Cavalier"
            [/variable]
        [/or]
        [then]
            {VARIABLE advanced.advances_to "Dragon Rider"}
            {VARIABLE advanced.max_experience 480}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Chocobone LotI"
        [/variable]
        [or]
            [variable]
                name=advanced.type
                equals="Chocobone"
            [/variable]
        [/or]
        [then]
            {VARIABLE advanced.advances_to "Grim Knight"}
            {VARIABLE advanced.max_experience 140}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Orcish Slayer"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Orcish Nightblade"}
            {VARIABLE advanced.max_experience 160}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Goblin Pillager"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Goblin Ravager"}
            {VARIABLE advanced.max_experience 140}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Goblin Rouser"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Goblin Warbanner"}
            {VARIABLE advanced.max_experience 58}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Goblin Impaler"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Sky Goblin"}
            {VARIABLE advanced.max_experience 66}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Javelineer"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Pilum Master"}
            {VARIABLE advanced.max_experience 140}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Deathblade"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Grim Knight,Phantom"}
            {VARIABLE advanced.max_experience 72}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Lancer"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Lunatic Knight"}
            {VARIABLE advanced.max_experience 130}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Silver Mage"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Duelist Wizard"}
            {VARIABLE advanced.max_experience 150}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Highwayman"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Blackguard,Shadow Prince"}
            {VARIABLE advanced.max_experience 180}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Paladin"
        [/variable]
        [or]
            [variable]
                name=advanced.type
                equals="Paladin LotI"
            [/variable]
        [/or]
        [or]
            [variable]
                name=advanced.type
                equals="Mage of Light"
            [/variable]
        [/or]
        [then]
            {VARIABLE advanced.advances_to "Prophet,Celestial Messenger"}
            {VARIABLE advanced.max_experience 180}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Troll Warrior"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Siege Troll"}
            {VARIABLE advanced.max_experience 150}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Troll Rocklobber"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Troll Boulderlobber"}
            {VARIABLE advanced.max_experience 120}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Orcish Warlord"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Orcish Sovereign LotI"}
            {VARIABLE advanced.max_experience 190}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Orcish Slurbow"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Orcish Strafer"}
            {VARIABLE advanced.max_experience 170}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Direwolf Rider"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Werewolf Rider"}
            {VARIABLE advanced.max_experience 180}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Nightgaunt"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Dark Shade"}
            {VARIABLE advanced.max_experience 150}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Spectre"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Reaper"}
            {VARIABLE advanced.max_experience 180}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Fugitive"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Shadow Prince"}
            {VARIABLE advanced.max_experience 180}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Halberdier"
        [/variable]
        [or]
            [variable]
                name=advanced.type
                equals="Halberdier LotI"
            [/variable]
        [/or]
        [then]
            {VARIABLE advanced.advances_to "Scythemaster"}
            {VARIABLE advanced.max_experience 180}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Elvish Sylph"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Elvish Seer"}
            {VARIABLE advanced.max_experience 300}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Elvish Shyde"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Faerie Incarnation"}
            {VARIABLE advanced.max_experience 150}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Master at Arms"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Shadowalker"}
            {VARIABLE advanced.max_experience 190}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Assassin"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Exterminator"}
            {VARIABLE advanced.max_experience 180}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Banebow"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Soul Shooter"}
            {VARIABLE advanced.max_experience 168}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Skeleton"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Revenant,Chocobone,Deathblade"}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Revenant"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Death Knight,Draug"}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Elvish Sharpshooter"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Elvish Gryphon Rider,Elvish Assassin"}
            {VARIABLE advanced.max_experience 170}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Elvish Outrider"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Elvish Gryphon Rider"}
            {VARIABLE advanced.max_experience 170}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Elvish Avenger"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Elvish Nightprowler"}
            {VARIABLE advanced.max_experience 132}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Elvish Champion"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Elvish Juggernaut"}
            {VARIABLE advanced.max_experience 132}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Elvish Marshal"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Elvish Warlord"}
            {VARIABLE advanced.max_experience 132}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Elvish Lord"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Elvish Overlord"}
            {VARIABLE advanced.max_experience 132}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Dwarvish Berserker"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Dwarvish Battlerager"}
            {VARIABLE advanced.max_experience 90}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Dwarvish Lord"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Dwarvish Hero"}
            {VARIABLE advanced.max_experience 170}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Dwarvish Dragonguard"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Dwarvish Technocrat"}
            {VARIABLE advanced.max_experience 170}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Dwarvish Sentinel"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Dwarvish Protector"}
            {VARIABLE advanced.max_experience 140}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Mage"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Red Mage,White Mage,Sword Mage"}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Fencer"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Duelist,Sword Mage"}
        [/then]
    [/if]
    [if]
        [variable]
            name=advanced.type
            equals="Ghast"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Abomination"}
        [/then]
    [/if]
#else
    [set_variables]
        name=advancements_list
        mode=replace
        [split]
            list=$advanced.advances_to
            key=name
            separator=","
            remove_empty=yes
        [/split]
    [/set_variables]
    {FOREACH advancements_list i}
        [if]
            [variable]
                name=advancements_list[$i].name
                contains="Advancing"
            [/variable]
            [then]
                {CLEAR_VARIABLE advancements_list[$i]}
                {VARIABLE_OP i sub 1}
            [/then]
        [/if]
    {NEXT i}
    [set_variable]
        name=advanced.advances_to
        [join]
            variable=advancements_list
            key=name
            separator=","
            remove_empty=yes
        [/join]
    [/set_variable]
    {CLEAR_VARIABLE advancements_list}
#endif
    [if]
        [variable]
            name=advanced.type
            equals="Soulless"
        [/variable]
        [then]
            {VARIABLE advanced.advances_to "Revenant,Bone Shooter,Monstrosity,Necrophage"}
        [/then]
    [/if]
    {UPDATE_ATTACKS_STUFF}
#enddef

#define CALCULATIONS_END
    [unstore_unit]
        variable=advanced
        find_vacant=no
    [/unstore_unit]
    {FOREACH objects_to_add i}
        [insert_tag]
            name=object
            variable=objects_to_add[$i]
        [/insert_tag]
    {NEXT i}
    {CLEAR_VARIABLE objects_to_add}
    [remove_unit_overlay]
        id=$advanced.id
        image=misc/fist-overlay.png
    [/remove_unit_overlay]
    [remove_unit_overlay]
        id=$advanced.id
        image=misc/armour-overlay.png
    [/remove_unit_overlay]
    [remove_unit_overlay]
        id=$advanced.id
        image=misc/sword-overlay.png
    [/remove_unit_overlay]
    [remove_unit_overlay]
        id=$advanced.id
        image=misc/flamesword-overlay.png
    [/remove_unit_overlay]
    [remove_unit_overlay]
        id=$advanced.id
        image=misc/shield-overlay.png
    [/remove_unit_overlay]
    [remove_unit_overlay]
        id=$advanced.id
        image=misc/orb-overlay.png
    [/remove_unit_overlay]
    {FOREACH advanced.modifications.object i}		# Make the items visible
        [if]
            [variable]
                name=advanced.modifications.object[$i].sort
                equals=armour
            [/variable]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=helm
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=shield
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=boots
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=gauntlets
                [/variable]
            [/or]
            [then]
                [unit_overlay]
                    id=$advanced.id
                    image=misc/armour-overlay.png
                [/unit_overlay]
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.modifications.object[$i].sort
                equals=sword
            [/variable]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=axe
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=staff
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=bow
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=mace
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=xbow
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=knife
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=dagger
                [/variable]
            [/or]
            [then]
                [unit_overlay]
                    id=$advanced.id
                    image=misc/sword-overlay.png
                [/unit_overlay]
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.modifications.object[$i].sort
                equals=potion
            [/variable]
            [then]
                [unit_overlay]
                    id=$advanced.id
                    image=misc/flamesword-overlay.png
                [/unit_overlay]
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.modifications.object[$i].sort
                equals=amulet
            [/variable]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=ring
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=cloak
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].sort
                    equals=limited
                [/variable]
            [/or]
            [then]
                [unit_overlay]
                    id=$advanced.id
                    image=misc/orb-overlay.png
                [/unit_overlay]
            [/then]
        [/if]
        [if]	# Make leadership-like abilities show a fist above the unit
            [variable]
                name=advanced.modifications.object[$i].number
                equals=8
            [/variable]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=62
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=80
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=81
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=82
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=83
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=84
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=85
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=88
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=151
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=152
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=153
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=154
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=180
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=186
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=208
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=212
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=227
                [/variable]
            [/or]
            [or]
                [variable]
                    name=advanced.modifications.object[$i].number
                    equals=600
                [/variable]
            [/or]
            [then]
                [unit_overlay]
                    id=$advanced.id
                    image=misc/fist-overlay.png
                [/unit_overlay]
            [/then]
        [/if]
    {NEXT i}
    {CLEAR_VARIABLE advanced}
#enddef

#define UPDATE_ATTACKS_STUFF

    {FOREACH advanced.attack i}
        [if]
            [variable]
                name=advanced.attack[$i].name
                equals=redeem
            [/variable]
            [then]
                {VARIABLE advanced.attack[$i].damage 1}
                {VARIABLE advanced.attack[$i].number 1}
                [if]
                    [variable]
                        name=advanced.status.redeem_waiting
                        equals=yes
                    [/variable]
                    [then]
                        {VARIABLE advanced.attack[$i].attack_weight 0}
                    [/then]
                [/if]
            [/then]
        [/if]
        # Prevent multiple backstabs from stacking multiplicatively - only the strongest one will work
        {VARIABLE backstab 0}
        {FOREACH advanced.attack[$i].specials.damage j} # Find the strongest backstab weapon special
            [if]
                [variable]
                    name=advanced.attack[$i].specials.damage[$j].id
                    contains=backstab
                [/variable]
                [then]
                    [switch]
                        variable=advanced.attack[$i].specials.damage[$j].id
                        [case]
                            value=charging backstab
                            {VARIABLE backstab 1}
                        [/case]
                        [case]
                            value=backstab
                            {VARIABLE backstab 2}
                        [/case]
                        [case]
                            value=greater backstab
                            {VARIABLE backstab 3}
                        [/case]
                        [case]
                            value=uber backstab
                            {VARIABLE backstab 4}
                        [/case]
                    [/switch]
                [/then]
            [/if]
        {NEXT j}
        {FOREACH advanced.attack[$i].specials.damage j} # Remove the weaker backstab weapon specials
            [if]
                [variable]
                    name=advanced.attack[$i].specials.damage[$j].id
                    equals=charging backstab
                [/variable]
                [and]
                    [variable]
                        name=backstab
                        greater_than=1
                    [/variable]
                [/and]
                [then]
                    {CLEAR_VARIABLE advanced.attack[$i].specials.damage[$j]}
                    {VARIABLE_OP j sub 1}
                [/then]
                [else]
                    [if]
                        [variable]
                            name=advanced.attack[$i].specials.damage[$j].id
                            equals=backstab
                        [/variable]
                        [and]
                            [variable]
                                name=backstab
                                greater_than=2
                            [/variable]
                        [/and]
                        [then]
                            {CLEAR_VARIABLE advanced.attack[$i].specials.damage[$j]}
                            {VARIABLE_OP j sub 1}
                        [/then]
                        [else]
                            [if]
                                [variable]
                                    name=advanced.attack[$i].specials.damage[$j].id
                                    equals=greater backstab
                                [/variable]
                                [and]
                                    [variable]
                                        name=backstab
                                        greater_than=3
                                    [/variable]
                                [/and]
                                [then]
                                    {CLEAR_VARIABLE advanced.attack[$i].specials.damage[$j]}
                                    {VARIABLE_OP j sub 1}
                                [/then]
                            [/if]
                        [/else]
                    [/if]
                [/else]
            [/if]
        {NEXT j}

        [if]
            [variable]
                name=advanced.attack[$i].range
                equals=melee
            [/variable]
            [then]
                {VARIABLE has_charge false}
                {VARIABLE has_charging_backstab false}
                {FOREACH advanced.attack[$i].specials.damage j}
                    [if]
                        [variable]
                            name=advanced.attack[$i].specials.damage[$j].id
                            contains="charg"
                        [/variable]
                        [then]
                            [if]
                                [variable]
                                    name=advanced.attack[$i].specials.damage[$j].id
                                    equals="charging backstab"
                                [/variable]
                                [then]
                                    {VARIABLE has_charging_backstab true}
                                [/then]
                                [else]
                                    {VARIABLE has_charge true}
                                [/else]
                            [/if]
                        [/then]
                    [/if]
                {NEXT j}
                [if]
                    [variable]
                        name=has_charge
                        equals=false
                    [/variable]
                    [then]
                        {VARIABLE x $advanced.attack[$i].specials.damage.length}
                        {VARIABLE advanced.attack[$i].specials.damage[$x].id "latent_charge"}
                        {VARIABLE advanced.attack[$i].specials.damage[$x].multiply 1.5}
                        {VARIABLE advanced.attack[$i].specials.damage[$x].apply_to both}
                        {VARIABLE advanced.attack[$i].specials.damage[$x].active_on offense}
                        {VARIABLE advanced.attack[$i].specials.damage[$x].filter_self.filter_adjacent.ability "charge_leadership"}
                        {VARIABLE advanced.attack[$i].specials.damage[$x].filter_self.filter_adjacent.is_enemy "no"}
                        [if]
                            [variable]
                                name=has_charging_backstab
                                equals=true
                            [/variable]
                            [then] # Undo this if the unit would be also bastabbing
                                {VARIABLE x $advanced.attack[$i].specials.damage.length}
                                {VARIABLE advanced.attack[$i].specials.damage[$x].id "latent_charge_counter_backstab"}
                                {VARIABLE advanced.attack[$i].specials.damage[$x].multiply 0.666}
                                {VARIABLE advanced.attack[$i].specials.damage[$x].apply_to both}
                                {VARIABLE advanced.attack[$i].specials.damage[$x].active_on offense}
                                {VARIABLE advanced.attack[$i].specials.damage[$x].backstab yes}
                                {VARIABLE advanced.attack[$i].specials.damage[$x].filter_self.filter_adjacent.ability "charge_leadership"}
                                {VARIABLE advanced.attack[$i].specials.damage[$x].filter_self.filter_adjacent.is_enemy "no"}
                            [/then]
                        [/if]
                    [/then]
                [/if]
                {CLEAR_VARIABLE has_charge,has_charging_backstab}

                [if]
                    [variable]
                        name=backstab
                        less_than=2
                    [/variable]
                    [then] # Don't allow more backstab abilities
                        {VARIABLE x $advanced.attack[$i].specials.damage.length}
                        {VARIABLE advanced.attack[$i].specials.damage[$x].id "latent_backstab"}
                        {VARIABLE advanced.attack[$i].specials.damage[$x].multiply 2}
                        {VARIABLE advanced.attack[$i].specials.damage[$x].backstab yes}
                        {VARIABLE advanced.attack[$i].specials.damage[$x].active_on offense}
                        {VARIABLE advanced.attack[$i].specials.damage[$x].filter_self.filter_adjacent.ability "backstab_leadership"}
                        {VARIABLE advanced.attack[$i].specials.damage[$x].filter_self.filter_adjacent.is_enemy "no"}
                    [/then]
                [/if]

                {VARIABLE x $advanced.attack[$i].specials.berserk.length}
                {VARIABLE advanced.attack[$i].specials.berserk[$x].id "latent_berserk"}
                {VARIABLE advanced.attack[$i].specials.berserk[$x].value 30}
                {VARIABLE advanced.attack[$i].specials.berserk[$x].filter_self.filter_adjacent.ability "berserk_leadership"}
                {VARIABLE advanced.attack[$i].specials.berserk[$x].filter_self.filter_adjacent.is_enemy "no"}

                {VARIABLE x $advanced.attack[$i].specials.drains.length}
                {VARIABLE advanced.attack[$i].specials.drains[$x].id "latent_drain"}
                {VARIABLE advanced.attack[$i].specials.drains[$x].value 25}
                {VARIABLE advanced.attack[$i].specials.drains[$x].filter_self.filter_adjacent.ability "drain_leadership"}
                {VARIABLE advanced.attack[$i].specials.drains[$x].filter_self.filter_adjacent.is_enemy "no"}
            [/then]
        [/if]
        [if]
            [variable]
                name=advanced.attack[$i].range
                equals=ranged
            [/variable]
            [then]
                {VARIABLE x $advanced.attack[$i].specials.chance_to_hit.length}
                {VARIABLE advanced.attack[$i].specials.chance_to_hit[$x].id "latent_marksman"}
                {VARIABLE advanced.attack[$i].specials.chance_to_hit[$x].value 60}
                {VARIABLE advanced.attack[$i].specials.chance_to_hit[$x].cumulative yes}
                {VARIABLE advanced.attack[$i].specials.chance_to_hit[$x].active_on offense}
                {VARIABLE advanced.attack[$i].specials.chance_to_hit[$x].filter_self.filter_adjacent.ability "marksman_leadership"}
                {VARIABLE advanced.attack[$i].specials.chance_to_hit[$x].filter_self.filter_adjacent.is_enemy "no"}
            [/then]
        [/if]

        {VARIABLE x $advanced.attack[$i].specials.firststrike.length}
        {VARIABLE advanced.attack[$i].specials.firststrike[$x].id "latent_firststrike"}
        {VARIABLE advanced.attack[$i].specials.firststrike[$x].filter_self.filter_adjacent.ability "firststrike_leadership"}
        {VARIABLE advanced.attack[$i].specials.firststrike[$x].filter_self.filter_adjacent.is_enemy "no"}

        {VARIABLE x $advanced.attack[$i].specials.poison.length}
        {VARIABLE advanced.attack[$i].specials.poison[$x].id "latent_poison"}
        {VARIABLE advanced.attack[$i].specials.poison[$x].filter_self.filter_adjacent.ability "poison_leadership"}
        {VARIABLE advanced.attack[$i].specials.poison[$x].filter_self.filter_adjacent.is_enemy "no"}

        {VARIABLE x $advanced.attack[$i].specials.damage.length}
        {VARIABLE advanced.attack[$i].specials.damage[$x].id "latent_wrath"}
        {VARIABLE advanced.attack[$i].specials.damage[$x].apply_to "self"}
        [if]
            [variable]
                name=advanced.variables.wrath
                equals=yes
            [/variable]
            [then]
                {VARIABLE advanced.attack[$i].specials.damage[$x].add $advanced.variables.wrath_intensity}
            [/then]
            [else]
                {VARIABLE advanced.attack[$i].specials.damage[$x].add 0}
            [/else]
        [/if]

        {CLEAR_VARIABLE backstab}
        {CLEAR_VARIABLE x}
    {NEXT i}

#enddef
